<?xml version="1.0" encoding="UTF-8"?>
<sqldrill name="SQL書き方ドリル">
  
  <chapter name="第2章　ひとつのテーブルを扱う">
    
    <section name="【その1】データを取り出す">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今、うちの会社がお付き合いしている顧客の名前を一覧で全部出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
   CustomerName
FROM
   Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , CustomerName
     FROM
         (
          SELECT 
            CustomerName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            CustomerName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , CustomerName
     FROM
         (
          SELECT 
            CustomerName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            CustomerName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersのAddress列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT

FROM

]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Address
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , Address
     FROM
         (
          SELECT 
            Address
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            Address
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , Address
     FROM
         (
          SELECT 
            Address
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            Address
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルProductsのProductName列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT


]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , ProductName
     FROM
         (
          SELECT 
            ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , ProductName
     FROM
         (
          SELECT 
            ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsのPrice列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Price
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , Price
     FROM
         (
          SELECT 
            Price
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            Price
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , Price
     FROM
         (
          SELECT 
            Price
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            Price
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeName列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , EmployeeName
     FROM
         (
          SELECT 
            EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , EmployeeName
     FROM
         (
          SELECT 
            EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesのEMail列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EMail 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , EMail
     FROM
         (
          SELECT 
            EMail
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EMail
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , EMail
     FROM
         (
          SELECT 
            EMail
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EMail
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-01-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その2】複数の列を指定する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今、うちの会社が扱っている商品の名前と単価を一覧で全部出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName
, Price
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , ProductName
     , Price
     FROM
         (
          SELECT 
            ProductName
          , Price
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ProductName
          , Price
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , ProductName
     , Price
     FROM
         (
          SELECT 
            ProductName
          , Price
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ProductName
          , Price
          FROM
              ( 
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersのCustomerName列、Address列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  CustomerName 
, Address 
FROM 
  Customers 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CustomerName
     , Address
     FROM
         (
          SELECT
            CustomerName
          , Address
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            CustomerName
          , Address
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CustomerName
     , Address
     FROM
         (
          SELECT 
            CustomerName
          , Address
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            CustomerName
          , Address 
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルProductsのProductID列、ProductName列、Price列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  ProductID 
, ProductName 
, Price 
FROM 
  Products 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , ProductID
     , ProductName
     , Price
     FROM
         (
          SELECT
            ProductID
          , ProductName
          , Price
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ProductID
          , ProductName
          , Price
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , ProductID
     , ProductName
     , Price
     FROM
         (
          SELECT 
            ProductID
          , ProductName
          , Price
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ProductID
          , ProductName
          , Price
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeName列、EMail列、Height列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 
, 

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EmployeeName 
, EMail 
, Height 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , EMail
     , Height
     FROM
         (
          SELECT 
            EmployeeName
          , EMail
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          , EMail
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , EMail
     , Height
     FROM
         (
          SELECT 
            EmployeeName
          , EMail
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          , EMail
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルCustomersのCustomerCode列、CustomerName列、CustomerCode列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  CustomerCode 
, CustomerName 
, CustomerCode 
FROM 
  Customers 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[         (
$$EXPECTED_SQL$$
          EXCEPT
$$ACTUAL_SQL$$

         )
UNION ALL
         (
$$ACTUAL_SQL$$
          EXCEPT
$$EXPECTED_SQL$$
         )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルProductsのProductCode列、Price列、ProductName列、ProductCode列を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  ProductCode 
, Price 
, ProductName 
, ProductCode 
FROM 
  Products 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[         (
$$EXPECTED_SQL$$
          EXCEPT
$$ACTUAL_SQL$$
         )
UNION ALL
         (
$$ACTUAL_SQL$$
          EXCEPT
$$EXPECTED_SQL$$
         )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-02-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その3】列に別名をつける">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[この前の商品名と単価の一覧だけど、項目名がわかりづらい。わかりやすいものにしてもう一度出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName AS 商品名
, Price AS 単価
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 商品名
     , 単価
     FROM
         (
          SELECT 
            商品名
          , 単価
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品名
          , 単価
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 商品名
     , 単価
     FROM
         (
          SELECT 
            商品名
          , 単価
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品名
          , 単価
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeNameを「社員名」という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EmployeeName AS 社員名 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     FROM
         (
          SELECT
            社員名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     FROM
         (
          SELECT 
            社員名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルCustomersのCustomerCodeを「顧客コード」、CustomerNameを「顧客名」という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  CustomerCode AS 顧客コード 
, CustomerName AS 顧客名 
FROM 
  Customers 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客コード
     , 顧客名
     FROM
         (
          SELECT
            顧客コード
          , 顧客名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            顧客コード
          , 顧客名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客コード
     , 顧客名
     FROM
         (
          SELECT 
            顧客コード
          , 顧客名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            顧客コード
          , 顧客名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">顧客コード</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsのProductCodeを「商品コード」、ProductNameを「商品名」、Priceを「価格」という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 
, 

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  ProductCode AS 商品コード 
, ProductName AS 商品名 
, Price AS 価格 
FROM 
  Products 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品コード
     , 商品名
     , 価格
     FROM
         (
          SELECT 
            商品コード
          , 商品名
          , 価格
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品コード
          , 商品名
          , 価格
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品コード
     , 商品名
     , 価格
     FROM
         (
          SELECT 
            商品コード
          , 商品名
          , 価格
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品コード
          , 商品名
          , 価格
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">商品コード</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルCustomersのCustomerNameを「顧客名」、「得意先名」という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  CustomerName AS 顧客名 
, CustomerName AS 得意先名 
FROM 
  Customers 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客名
     , 得意先名
     FROM
         (
          SELECT
            顧客名
          , 得意先名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            顧客名
          , 得意先名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客名
     , 得意先名
     FROM
         (
          SELECT 
            顧客名
          , 得意先名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            顧客名
          , 得意先名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeNameを「社員名」、EMailを「メールアドレス」、「連絡先」という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EmployeeName AS 社員名 
, EMail AS メールアドレス 
, EMail AS 連絡先 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     , メールアドレス
     , 連絡先
     FROM
         (
          SELECT
            社員名
          , メールアドレス
          , 連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          , メールアドレス
          , 連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     , メールアドレス
     , 連絡先
     FROM
         (
          SELECT 
            社員名
          , メールアドレス
          , 連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          , メールアドレス
          , 連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-03-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その4】列の値に対して演算を行う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[この前の商品名と単価の一覧だけど、消費税が含まれてない。単価に消費税を足してもう一度出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName AS 商品名
, Price * 1.05 AS 税込価格
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 商品名
     , 税込価格
     FROM
         (
          SELECT 
            商品名
          , 税込価格
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品名
          , 税込価格
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 商品名
     , 税込価格
     FROM
         (
          SELECT 
            商品名
          , 税込価格
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品名
          , 税込価格
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalaryで、Amountの15％を求め、「給与の15％」（％は全角にすること）という別名で取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   *  AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Amount*0.15 AS "給与の15％"
FROM
  Salary
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM
    (
     SELECT
       '0' AS 状態
     , "給与の15％"
     FROM
         (
          SELECT
            "給与の15％"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            "給与の15％"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , "給与の15％"
     FROM
         (
          SELECT
            "給与の15％"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            "給与の15％"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SalaryID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesで、Heightの半分を求めなさい。別名は「身長の半分」とする。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  Height*0.5 AS 身長の半分
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 身長の半分
     FROM
         (
          SELECT
            身長の半分
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            身長の半分
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 身長の半分
     FROM
         (
          SELECT 
            身長の半分
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            身長の半分
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesで、Weightの3倍から50を引いたものを求めなさい。別名は「体重の3倍引く50」とする。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  Weight*3-50 AS 体重の3倍引く50
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 体重の3倍引く50
     FROM
         (
          SELECT 
            体重の3倍引く50
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            体重の3倍引く50
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 体重の3倍引く50
     FROM
         (
          SELECT 
            体重の3倍引く50
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            体重の3倍引く50
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルProductsで、Priceに100を加え、その30％を求めなさい。別名は「（価格＋100）の30％」（カッコや＋や％は全角）とする。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  (Price+100)*0.3 AS "（価格＋100）の30％"
FROM 
  Products 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , "（価格＋100）の30％"
     FROM
         (
          SELECT
            "（価格＋100）の30％"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            "（価格＋100）の30％"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , "（価格＋100）の30％"
     FROM
         (
          SELECT 
            "（価格＋100）の30％"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            "（価格＋100）の30％"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesで、Quantityに200を加え、3で割ったものを求めなさい。別名は「（数量＋200）÷3」（カッコや＋や÷は全角）とする。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  (Quantity+200 )/3 AS "（数量＋200）÷3"
FROM 
  Sales 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , "（数量＋200）÷3"
     FROM
         (
          SELECT
            "（数量＋200）÷3"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            "（数量＋200）÷3"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , "（数量＋200）÷3"
     FROM
         (
          SELECT 
            "（数量＋200）÷3"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            "（数量＋200）÷3"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-04-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その5】列同士で演算を行う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[社員の肥満度が気になる。BMIで計算して一覧を出してくれ。名前は出さなくても構わない]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Weight / (Height / 100) / (Height / 100) AS BMI
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , BMI
     FROM
         (
          SELECT 
            BMI
          FROM
              (
$$EXPECTED_SQL$$
             )
          EXCEPT 
          SELECT 
            BMI
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , BMI
     FROM
         (
          SELECT 
            BMI
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            BMI
          FROM
              (
$$EXPECTED_SQL$$
             )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesで、Heightの3倍からWeightの2.5倍を引いたものを求めなさい。別名は結果とします。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   *  -  *  AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Height*3-Weight*2.5 AS 結果
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 結果
     FROM
         (
          SELECT
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 結果
     FROM
         (
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesで、HireFiscalYearをWeightで割ってHeightに加えたものを求めなさい。別名は結果とします。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
      
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  HireFiscalYear/Weight+Height AS 結果
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 結果
     FROM
         (
          SELECT
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 結果
     FROM
         (
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesで、QuantityにCustomerID、ProductID、EmployeeIDの積を加えたものを求めなさい。別名は結果とします。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Quantity+CustomerID*ProductID*EmployeeID AS 結果
FROM
  Sales
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 結果
     FROM
         (
          SELECT
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 結果
     FROM
         (
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルProductsで、PriceからProductCode、CategoryIDの積を引いたものを求めなさい。別名は結果とします。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Price-ProductCode*CategoryID AS 結果
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 結果
     FROM
         (
          SELECT
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 結果
     FROM
         (
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomersで、CustomerIDにCustomerClassIDの3乗を加えたものを求めなさい。別名は結果とします。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID+CustomerClassID*CustomerClassID*CustomerClassID AS 結果
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 結果
     FROM
         (
          SELECT
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 結果
     FROM
         (
          SELECT 
            結果
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            結果
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-05-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その6】文字列の連結を行う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今度のイベント用に、お客様の名札を作ってくれ。ちゃんと『様』を付けてくれよ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerName || '様' AS お名前
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , お名前
     FROM
         (
          SELECT 
            お名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            お名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , お名前
     FROM
         (
          SELECT 
            お名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            お名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeNameの後に'さん'を連結して「社員名」という別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   ||  AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName || 'さん' AS 社員名
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     FROM
         (
          SELECT
            社員名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     FROM
         (
          SELECT 
            社員名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesのEMailの前に「'E-MAIL:'」を連結して、「メールアドレス」という別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
   'E-MAIL:' || EMail AS メールアドレス
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , メールアドレス
     FROM
         (
          SELECT
            メールアドレス
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            メールアドレス
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , メールアドレス
     FROM
         (
          SELECT 
            メールアドレス
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            メールアドレス
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeNameの後に「'さんの'」を連結、EMailの前に「'E-MAIL:'」を連結してその2つをさらにに連結、「連絡先」という別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName || 'さんの' || 'E-MAIL:' || EMail AS 連絡先
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 連絡先
     FROM
         (
          SELECT
            連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 連絡先
     FROM
         (
          SELECT 
            連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルCustomersのCustomerName、Addressを用いて「○○様のお住まいは△△」を組み立て、「お得意様連絡先」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerName || '様のお住まいは' || Address AS お得意様連絡先
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , お得意様連絡先
     FROM
         (
          SELECT
            お得意様連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            お得意様連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , お得意様連絡先
     FROM
         (
          SELECT 
            お得意様連絡先
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            お得意様連絡先
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesのEmployeeName、BloodTypeを用いて「社員○○さんの血液型は△△型」を組み立て「社員血液型」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  '社員' || EmployeeName || 'さんの血液型は' || BloodType || '型' AS 社員血液型
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員血液型
     FROM
         (
          SELECT
            社員血液型
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員血液型
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員血液型
     FROM
         (
          SELECT 
            社員血液型
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員血液型
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-06-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その7】集合関数を使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[うちの商品って、平均単価いくらくらいなの？　ちょっと教えて]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  AVG(Price) AS 平均単価
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 平均単価
     FROM
         (
          SELECT 
            平均単価
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            平均単価
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 平均単価
     FROM
         (
          SELECT 
            平均単価
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            平均単価
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersの顧客数を求めて、「お得意様数」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  COUNT( CustomerID ) AS お得意様数
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM
    (
     SELECT
       '0' AS 状態
     , お得意様数
     FROM
         (
          SELECT
            お得意様数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            お得意様数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , お得意様数
     FROM
         (
          SELECT
            お得意様数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            お得意様数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesのWeight合計を求め、「社員体重合計」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SUM( Weight ) AS 社員体重合計
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員体重合計
     FROM
         (
          SELECT
            社員体重合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員体重合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員体重合計
     FROM
         (
          SELECT 
            社員体重合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員体重合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsのPriceの最大値を求め、「最高額価格」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  MAX( Price ) AS 最高額価格
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 最高額価格
     FROM
         (
          SELECT
            最高額価格
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            最高額価格
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 最高額価格
     FROM
         (
          SELECT 
            最高額価格
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            最高額価格
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesのWeightの最小値を求め、「最軽量体重」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  MIN( Weight ) AS 最軽量体重
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 最軽量体重
     FROM
         (
          SELECT
            最軽量体重
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            最軽量体重
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 最軽量体重
     FROM
         (
          SELECT 
            最軽量体重
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            最軽量体重
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesのHeight、Weightの平均値を求め、「平均身長」,「平均体重」と別名をつけなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  AVG( Height ) AS 平均身長
, AVG( Weight ) AS 平均体重
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 平均身長
     , 平均体重
     FROM
         (
          SELECT
            平均身長
          , 平均体重
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            平均身長
          , 平均体重
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 平均身長
     , 平均体重
     FROM
         (
          SELECT 
            平均身長
          , 平均体重
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            平均身長
          , 平均体重
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-07-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その8】ある条件でレコードを絞り込む（1）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[うちの会社でバスケットボールのチームを作ろうと思う。ついては、背の高い人をピックアップしてくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName AS 氏名
FROM
  Employees
WHERE
  Height >= 180
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            氏名
          FROM
              ( 
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルProductsからPriceが2,500以上のProductNameを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
FROM
  
WHERE
   >= 2500
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName
FROM
  Products
WHERE
  Price >= 2500
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductName
     FROM
         (
          SELECT
            ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductName
     FROM
         (
          SELECT 
            ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesからWeightが70以上のEmployeeName, Weightを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
FROM
  

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName
, Weight
FROM
  Employees
WHERE
  Weight >= 70
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , Weight
     FROM
         (
          SELECT
            EmployeeName
          , Weight
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          , Weight
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , Weight
     FROM
         (
          SELECT 
            EmployeeName
          , Weight
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          , Weight
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesからHeightが160以上180以下のEmployeeName、Heightを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 

  

   BETWEEN  AND 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName
, Height
FROM
  Employees
WHERE
  Height BETWEEN 160 AND 180
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , Height
     FROM
         (
          SELECT
            EmployeeName
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , Height
     FROM
         (
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;
]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesからSaleDateが2007年6月1日以降のSaleIDを取り出しなさい。SaleDateの表記は「2007-06-01」となっています。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SaleID
FROM
  Sales
WHERE
  SaleDate >= '2007-06-01'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , SaleID
     FROM
         (
          SELECT
            SaleID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            SaleID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , SaleID
     FROM
         (
          SELECT 
            SaleID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            SaleID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesからHeightが170以上、Weightが60以上のEmployeeName,Height,Weightを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName
, Height
, Weight
FROM
  Employees
WHERE
  Height >= 170
  AND
  Weight >= 60
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , Height
     , Weight
     FROM
         (
          SELECT
            EmployeeName
          , Height
          , Weight
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          , Height
          , Weight
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , Height
     , Weight
     FROM
         (
          SELECT 
            EmployeeName
          , Height
          , Weight
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          , Height
          , Weight
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-08-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その9】ある条件でレコードを絞り込む（2）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[最近の女性の名前って、昔みたいに～子ってつく人少ない気がするんだよな。うちの会社だと何人いるんだろう]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  COUNT(*) AS 子のつく社員の人数
FROM
  Employees
WHERE
  EmployeeName LIKE '%子'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 子のつく社員の人数
     FROM
         (
          SELECT 
            子のつく社員の人数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            子のつく社員の人数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 子のつく社員の人数
     FROM
         (
          SELECT 
            子のつく社員の人数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            子のつく社員の人数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersからCustomerNameに'株式会社'を含むCustomerNameを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  AS 会社名
FROM
  
WHERE

    
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerName AS 会社名
FROM
  Customers
WHERE
  CustomerName LIKE '%株式会社%'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 会社名
     FROM
         (
          SELECT
            会社名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            会社名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 会社名
     FROM
         (
          SELECT 
            会社名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            会社名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesからEmployeeNameに'ー'を含むレコードのHeightの平均を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  AS 平均身長
FROM
  
WHERE

    
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  AVG( Height ) AS 平均身長
FROM
  Employees
WHERE
  EmployeeName LIKE '%ー%'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 平均身長
     FROM
         (
          SELECT
            平均身長
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            平均身長
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 平均身長
     FROM
         (
          SELECT 
            平均身長
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            平均身長
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルCustomersからCustomerNameに'株式会社'を含まないレコードの件数を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  AS 顧客数





;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  COUNT( CustomerID ) AS 顧客数
FROM
  Customers
WHERE
  CustomerName NOT LIKE '%株式会社%'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM
    (
     SELECT
       '0' AS 状態
     , 顧客数
     FROM
         (
          SELECT
            顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客数
     FROM
         (
          SELECT
            顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesからEmployeeNameに'リ'を含み、身長が160以下のEmployeeName,Heightを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EmployeeName 
, Height
FROM 
  Employees 
WHERE 
  EmployeeName  LIKE '%リ%'  
  AND Height <= 160
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , Height
     FROM
         (
          SELECT
            EmployeeName
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , Height
     FROM
         (
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          , Height
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomersからCustomerNameに'株式会社'を含まず、Addressに'江戸川区'を含むレコードを取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  * 
FROM 
  Customers 
WHERE 
  CustomerName NOT LIKE '%株式会社%' 
  AND Address LIKE '%江戸川区%' 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , *
     FROM
         (
          SELECT
            *
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            *
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , *
     FROM
         (
          SELECT 
            *
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            *
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-09-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その10】列の値に条件を設定する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[うちの商品を価格帯別でランク付けしてみるとどうなるだろうか。ちょっと調べてくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName AS 商品名
, CASE
    WHEN Price < 1000 THEN 'C'
    WHEN Price < 2000 THEN 'B'
    ELSE 'A'
  END AS ランク
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , ランク
     FROM
         (
          SELECT 
            ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , ランク
     FROM
         (
          SELECT 
            ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesを身長によって160未満を「A」、160以上170未満を「B」、170以上180未満を「C」、180以上を「D」にランク分けし、EmployeeName（「社員名」という別名をつける）と「ランク」を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 社員名
, CASE
    WHEN  < 160 THEN 'A'
    WHEN  < 170 THEN 'B'
    WHEN  < 180 THEN 'C'
    ELSE 'D'
  END AS ランク
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName AS 社員名
, CASE
    WHEN Height < 160 THEN 'A'
    WHEN Height < 170 THEN 'B'
    WHEN Height < 180 THEN 'C'
    ELSE 'D'
  END AS ランク
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     , ランク
     FROM
         (
          SELECT
            社員名
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     , ランク
     FROM
         (
          SELECT 
            社員名
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalaryをAmountによって150,000未満を「D」、150,000以上300,000未満を「C」、300,000以上500,000未満を「B」、500,000以上を「A」にランク分けし、SalaryID、ランクを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 給与ID 
, 
    WHEN  < 150000 THEN 
    WHEN  < 300000 THEN 
    WHEN  < 500000 THEN 
    ELSE 
   AS ランク
FROM 
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SalaryID AS 給与ID
, CASE
    WHEN Amount < 150000 THEN 'D'
    WHEN Amount < 300000 THEN 'C'
    WHEN Amount < 500000 THEN 'B'
    ELSE 'A'
  END AS ランク
FROM
  Salary
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 給与ID
     , ランク
     FROM
         (
          SELECT
            給与ID
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            給与ID
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 給与ID
     , ランク
     FROM
         (
          SELECT 
            給与ID
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            給与ID
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">給与ID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesを体重によって60未満を「A」、60以上70未満を「B」、70以上80未満を「C」、80以上を「D」にランク分けし、EmployeeName、ランクを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 社員名 
, 
      < 60 THEN 
      < 70 THEN 
      < 80 THEN 
    
   AS ランク

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName AS 社員名 
, CASE
    WHEN Weight < 60 THEN 'A'
    WHEN Weight < 70 THEN 'B'
    WHEN Weight < 80 THEN 'C'
    ELSE 'D'
  END AS ランク
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     , ランク
     FROM
         (
          SELECT
            社員名
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     , ランク
     FROM
         (
          SELECT 
            社員名
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesをQuantityによって、10以上を「A」、10未満を「B」にランク分けし、SaleID（「販売ID」という別名をつける）、ランクを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SaleID AS 販売ID 
, CASE
    WHEN Quantity < 10 THEN 'B'
    ELSE 'A'
  END AS ランク
FROM 
  Sales 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 販売ID
     , ランク
     FROM
         (
          SELECT
            販売ID
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            販売ID
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 販売ID
     , ランク
     FROM
         (
          SELECT 
            販売ID
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            販売ID
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;
]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesを身長によって160未満を「A」、160以上170未満を「B」、170以上180未満を「C」、180以上を「D」にランク分けし、EmployeeName（「社員名」と別名をつける）、Height（「身長」と別名をつける）とランクを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName AS 社員名 
, Height AS 身長 
, CASE
    WHEN Height < 160 THEN 'A'
    WHEN Height < 170 THEN 'B'
    WHEN Height < 180 THEN 'C'
    ELSE 'D'
  END AS ランク 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員名
     , 身長
     , ランク
     FROM
         (
          SELECT
            社員名
          , 身長
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員名
          , 身長
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員名
     , 身長
     , ランク
     FROM
         (
          SELECT 
            社員名
          , 身長
          , ランク
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員名
          , 身長
          , ランク
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-10-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その11】グループ単位で集計する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[都道府県別に、それぞれ何人ずつ顧客がいるのか教えてくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  PrefecturalID AS 都道府県
, COUNT(*) AS 顧客数
FROM
  Customers
GROUP BY
  PrefecturalID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            都道府県
          , 顧客数
          FROM
              ( 
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalesをCustomerIDでグループ化し、CustomerIDごとの件数を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 顧客ID
,  AS 件数
FROM
  
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS 顧客ID
, COUNT(*) AS 件数
FROM
  Sales
GROUP BY
  CustomerID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客ID
     , 件数
     FROM
         (
          SELECT
            顧客ID
          , 件数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            顧客ID
          , 件数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客ID
     , 件数
     FROM
         (
          SELECT 
            顧客ID
          , 件数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            顧客ID
          , 件数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalaryをEmployeeIDでグループ化し、EmployeeIDごとのAmount合計を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 社員ID
,  AS 合計
FROM
  
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS 社員ID
, SUM( Amount ) AS 合計
FROM
  Salary
GROUP BY
  EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員ID
     , 合計
     FROM
         (
          SELECT
            社員ID
          , 合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員ID
          , 合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員ID
     , 合計
     FROM
         (
          SELECT 
            社員ID
          , 合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員ID
          , 合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesをCustomerID、ProductIDでグループ化し、CustomerID、ProductIDごとのQuantity合計を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 顧客ID 
,  AS 商品ID 
,  AS 数量 

  

  
, 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS 顧客ID
, ProductID AS 商品ID
, SUM( Quantity ) AS 数量
FROM
  Sales
GROUP BY
  CustomerID
, ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客ID
     , 商品ID
     , 数量
     FROM
         (
          SELECT
            顧客ID
          , 商品ID
          , 数量
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            顧客ID
          , 商品ID
          , 数量
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客ID
     , 商品ID
     , 数量
     FROM
         (
          SELECT 
            顧客ID
          , 商品ID
          , 数量
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            顧客ID
          , 商品ID
          , 数量
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesをBloodType（「血液型」と別名をつける）でグループ化し、Height、Weightの平均値（それぞれ別名は「平均身長」、「平均体重」とします）を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  BloodType  AS 血液型
, AVG( Height ) AS 平均身長
, AVG( Weight ) AS 平均体重
FROM
  Employees
GROUP BY
  BloodType
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 血液型
     , 平均身長
     , 平均体重
     FROM
         (
          SELECT
            血液型
          , 平均身長
          , 平均体重
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            血液型
          , 平均身長
          , 平均体重
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 血液型
     , 平均身長
     , 平均体重
     FROM
         (
          SELECT 
            血液型
          , 平均身長
          , 平均体重
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            血液型
          , 平均身長
          , 平均体重
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">BloodType</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalaryをEmployeeID（別名は「社員ID」）でグループ化し、レコード数（別名は「支給回数」）、Amountの平均値（別名は「平均支給額」）を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS 社員ID
, COUNT(*) AS 支給回数
, AVG( Amount ) AS 平均支給額
FROM
  Salary
GROUP BY
  EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員ID
     , 支給回数
     , 平均支給額
     FROM
         (
          SELECT
            社員ID
          , 支給回数
          , 平均支給額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員ID
          , 支給回数
          , 平均支給額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員ID
     , 支給回数
     , 平均支給額
     FROM
         (
          SELECT 
            社員ID
          , 支給回数
          , 平均支給額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員ID
          , 支給回数
          , 平均支給額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-11-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その12】グループ単位で集計した結果を絞り込む（1）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[この前の都道府県別顧客数だけど、顧客数が3人以上の都道府県だけを出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  PrefecturalID AS 都道府県
, COUNT(*) AS 顧客数
FROM
  Customers
GROUP BY
  PrefecturalID
HAVING
  COUNT(*) >= 3
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalaryからレコード数が12未満のEmployeeIDとレコード数を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 社員ID
,  AS 支給回数
FROM
  
GROUP BY
  
HAVING
   < 12
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS 社員ID
, COUNT(*) AS 支給回数
FROM
  Salary
GROUP BY
  EmployeeID
HAVING
  COUNT(*) < 12
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員ID
     , 支給回数
     FROM
         (
          SELECT
            社員ID
          , 支給回数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員ID
     , 支給回数
     FROM
         (
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルCustomersをPrefecturalIDでグループ化し、複数レコードを持つPrefecturalIDを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 県ID
,  AS 顧客数
FROM
  
GROUP BY
  

   > 1
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  PrefecturalID AS 県ID
, COUNT(*) AS 顧客数
FROM
  Customers
GROUP BY
  PrefecturalID
HAVING
  COUNT(*)  > 1
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 県ID
     , 顧客数
     FROM
         (
          SELECT
            県ID
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 県ID
     , 顧客数
     FROM
         (
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesをProductIDでグループ化し、レコードを10以上、50以下持つProductIDとそのレコード数を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 商品ID
,  AS 売上レコード数

  

  

   >=  AND  <= 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID AS 商品ID
, COUNT(*) AS 売上レコード数
FROM
  Sales
GROUP BY
  ProductID
HAVING
  COUNT(*) >= 10 AND COUNT(*) <= 50
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品ID
     , 売上レコード数
     FROM
         (
          SELECT
            商品ID
          , 売上レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品ID
     , 売上レコード数
     FROM
         (
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesをBloodTypeでグループ化したとき、10件以上持つBloodType（別名は「血液型」）、データ数（別名は「データ件数」）を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  BloodType  AS 血液型
, COUNT(*)  AS データ件数
FROM
  Employees
GROUP BY
  BloodType
HAVING
  COUNT(*) >=10
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 血液型
     , データ件数
     FROM
         (
          SELECT
            血液型
          , データ件数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 血液型
     , データ件数
     FROM
         (
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">BloodType</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesをProductIDでグループ化したとき、Quantityの合計が100以上かつ200以下のProductID（別名は「商品ID」）、Quantity合計（別名は「数量合計」）を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID AS 商品ID
, SUM( Quantity ) AS 数量合計
FROM
  Sales
GROUP BY
  ProductID
HAVING
  SUM( Quantity ) >= 100 AND SUM( Quantity ) <= 200
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品ID
     , 数量合計
     FROM
         (
          SELECT
            商品ID
          , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品ID
     , 数量合計
     FROM
         (
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-12-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その13】グループ単位で集計した結果を絞り込む（2）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[この前の都道府県別顧客数だけど、会員種別が法人の顧客数が2人以上の都道府県だけを出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  PrefecturalID AS 都道府県
, COUNT(*) AS 顧客数
FROM
  Customers
WHERE
  CustomerClassID = 1
GROUP BY
  PrefecturalID
HAVING
  COUNT(*) >= 2
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 都道府県
     , 顧客数
     FROM
         (
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            都道府県
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersをPrefecturalIDでグループ化したとき、PrefecturalIDが10以上で複数の顧客を持つPrefecturalID、レコード数を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 県ID
,  AS 顧客数
FROM 
  
WHERE
   >= 10
GROUP BY 
  
HAVING 
   > 1 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  PrefecturalID AS 県ID
, COUNT(*) AS 顧客数
FROM
  Customers
WHERE
  PrefecturalID >= 10
GROUP BY
  PrefecturalID
HAVING
  COUNT(*) > 1
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 県ID
     , 顧客数
     FROM
         (
          SELECT
            県ID
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 県ID
     , 顧客数
     FROM
         (
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            県ID
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalaryからレコード数が12以上、EmployeeIDが20以上のEmployeeIDとレコード数を取り出しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 社員ID
,  AS 支給回数
FROM
  
WHERE
   >= 20
GROUP BY
  
HAVING
   >= 12
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS 社員ID
, COUNT(*) AS 支給回数
FROM
  Salary
WHERE
  EmployeeID >= 20
GROUP BY
  EmployeeID
HAVING
  COUNT(*) >= 12
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 社員ID
     , 支給回数
     FROM
         (
          SELECT
            社員ID
          , 支給回数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 社員ID
     , 支給回数
     FROM
         (
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            社員ID
          , 支給回数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesをProductIDでグループ化し、レコードを30以上持ち、かつProductIDが20以上30以下のProductIDとそのレコード数を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 商品ID
,  AS 売上レコード数 

  

   >=   AND  <= 

  

   >= 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID AS 商品ID
, COUNT(*) AS 売上レコード数
FROM
  Sales
WHERE
  ProductID >= 20 AND ProductID <= 30
GROUP BY
  ProductID
HAVING
  COUNT(*) >= 30
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品ID
     , 売上レコード数
     FROM
         (
          SELECT
            商品ID
          , 売上レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品ID
     , 売上レコード数
     FROM
         (
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品ID
          , 売上レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesをBloodTypeでグループ化したとき、Heightが165以上の社員データを5件以上持つBloodType（別名は「血液型」）、データ数（別名は「データ件数」）を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  BloodType  AS 血液型
, COUNT(*)  AS データ件数
FROM
  Employees
WHERE
  Height >= 165
GROUP BY
  BloodType
HAVING
  COUNT(*) >= 5
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 血液型
     , データ件数
     FROM
         (
          SELECT
            血液型
          , データ件数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 血液型
     , データ件数
     FROM
         (
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            血液型
          , データ件数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">BloodType</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesをProductIDでグループ化したとき、SaleDateが2007-06-01以降でQuantityの合計が200以上のProductID（別名は「商品ID」）、Quantity合計（別名は「数量合計」）を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID AS 商品ID
, SUM( Quantity ) AS 数量合計
FROM
  Sales
WHERE
  SaleDate >= '2007-06-01'
GROUP BY
  ProductID
HAVING
  SUM( Quantity ) >= 200
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品ID
     , 数量合計
     FROM
         (
          SELECT
            商品ID
          , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品ID
     , 数量合計
     FROM
         (
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品ID
          , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-13-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その14】クロス集計を行う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[うちの会社って、血液型は何が多いんだろうね。それぞれの人数を入社年度ごとに出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  HireFiscalYear AS 入社年度
, SUM(
      CASE
        WHEN BloodType = 'A' THEN 1
        ELSE 0
      END
     ) AS A型
, SUM(
      CASE
        WHEN BloodType = 'B' THEN 1
        ELSE 0
      END
     ) AS B型
, SUM(
      CASE
        WHEN BloodType = 'O' THEN 1
        ELSE 0
      END
     ) AS O型
, SUM(
      CASE
        WHEN BloodType = 'AB' THEN 1
        ELSE 0
      END
     ) AS AB型
FROM
  Employees
GROUP BY
  HireFiscalYear
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 入社年度
     , A型
     , B型
     , O型
     , AB型
     FROM
         (
          SELECT 
            入社年度
          , A型
          , B型
          , O型
          , AB型
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            入社年度
          , A型
          , B型
          , O型
          , AB型
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 入社年度
     , A型
     , B型
     , O型
     , AB型
     FROM
         (
          SELECT
            入社年度
          , A型
          , B型
          , O型
          , AB型
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            入社年度
          , A型
          , B型
          , O型
          , AB型
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">入社年度</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesをHireFiscalYear（入社年度）でグループ化したとき、Height（身長）を次の4つの範囲に分けて、それぞれの人数を表示しなさい。「160cm以下：Heightが160以下」「170cm以下：Heightが170以下」「180cm以下：Heightが180以下」「180cm超：Heightが180より大きい」]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 入社年度
, SUM(
      CASE
         WHEN  <= 160  1
          0
       END
     ) AS "160cm以下"
, SUM(
      CASE
         WHEN  <= 170  1
          0
       END
     ) AS "170cm以下"
, SUM(
      CASE
         WHEN  <= 180  1
          0
       END
     ) AS "180cm以下"
, SUM(
      CASE
         WHEN  > 180  1
          0
       END
     ) AS "181cm以上"
FROM
  
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  HireFiscalYear AS 入社年度 
, SUM(
      CASE
        WHEN Height <= 160 THEN 1
        ELSE 0
      END
     ) AS "160cm以下" 
, SUM(
      CASE
        WHEN Height <= 170 THEN 1
        ELSE 0
      END
     ) AS "170cm以下" 
, SUM(
      CASE
        WHEN Height <= 180 THEN 1
        ELSE 0
      END
     ) AS "180cm以下" 
, SUM(
      CASE
        WHEN Height > 180 THEN 1
        ELSE 0
      END
     ) AS "181cm以上" 
FROM 
  Employees 
GROUP BY 
  HireFiscalYear 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 入社年度
     , "160cm以下"
     , "170cm以下"
     , "180cm以下"
     , "181cm以上"
     FROM
         (
          SELECT
            入社年度
          , "160cm以下"
          , "170cm以下"
          , "180cm以下"
          , "181cm以上"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            入社年度
          , "160cm以下"
          , "170cm以下"
          , "180cm以下"
          , "181cm以上"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 入社年度
     , "160cm以下"
     , "170cm以下"
     , "180cm以下"
     , "181cm以上"
     FROM
         (
          SELECT 
            入社年度
          , "160cm以下"
          , "170cm以下"
          , "180cm以下"
          , "181cm以上"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            入社年度
          , "160cm以下"
          , "170cm以下"
          , "180cm以下"
          , "181cm以上"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">HireFiscalYear</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルProductsをCategoryID（商品カテゴリID）でグループ化したとき、Price（単価）を次の4つの範囲に分けて、それぞれの商品数を表示しなさい。「100円未満：Priceが100未満」「400円未満：Priceが400未満」「1000円未満：Priceが1000未満」「1000円以上：Priceが1000以上」]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 商品カテゴリID 
, SUM(
      
          < 100  
         
      
     ) AS "100円未満" 
, SUM(
      
          < 400  
         
      
     ) AS "400円未満" 
, SUM(
     CASE
        WHEN  < 1000  
         
      
     ) AS "1000円未満" 
, SUM(
     CASE
        WHEN  >= 1000  
         
      
     ) AS "1000円以上"
FROM
   

   
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CategoryID AS 商品カテゴリID 
, SUM(
      CASE
        WHEN Price < 100 THEN 1
        ELSE 0
      END
     ) AS "100円未満" 
, SUM(
      CASE
        WHEN Price < 400 THEN 1
        ELSE 0
      END
     ) AS "400円未満" 
, SUM(
      CASE
        WHEN Price < 1000 THEN 1
        ELSE 0
      END
     ) AS "1000円未満" 
, SUM(
      CASE
        WHEN Price >= 1000 THEN 1
        ELSE 0
      END
     ) AS "1000円以上" 
FROM 
  Products 
GROUP BY 
  CategoryID 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品カテゴリID
     , "100円未満"
     , "400円未満"
     , "1000円未満"
     , "1000円以上"
     FROM
         (
          SELECT
            商品カテゴリID
          , "100円未満"
          , "400円未満"
          , "1000円未満"
          , "1000円以上"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品カテゴリID
          , "100円未満"
          , "400円未満"
          , "1000円未満"
          , "1000円以上"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品カテゴリID
     , "100円未満"
     , "400円未満"
     , "1000円未満"
     , "1000円以上"
     FROM
         (
          SELECT 
            商品カテゴリID
          , "100円未満"
          , "400円未満"
          , "1000円未満"
          , "1000円以上"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品カテゴリID
          , "100円未満"
          , "400円未満"
          , "1000円未満"
          , "1000円以上"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CategoryID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesをCustomerID（顧客ID）でグループ化したとき、SaleDate（販売日）の月を9月・10月・11月の3つに区分けして、それぞれの合計販売個数を表示しなさい。なお、抽出条件として販売日の年は2006年のみとします。また、「関数(引数)」は「関数」「(」「引数」「)」でそれぞれ1マスとし、引数内のSQLもそれぞれ単語単位で1マスずつ使用します。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 顧客ID
, 

         MONTH( SaleDate ) = 9
           
        
       AS "9月"
, 
   CASE
         MONTH( SaleDate ) = 10
   ELSE        
        
       AS "10月"
, 
   CASE
         MONTH( SaleDate ) = 11
   ELSE        
        
       AS "11月"
FROM
  

   YEAR ( ) =    

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS 顧客ID
, SUM(
      CASE
        WHEN MONTH( SaleDate ) = 9 THEN Quantity 
        ELSE 0
      END
     ) AS "9月"
, SUM(
      CASE
        WHEN MONTH( SaleDate ) = 10 THEN Quantity 
        ELSE 0
      END
     ) AS "10月"
, SUM(
      CASE
        WHEN MONTH( SaleDate ) = 11 THEN Quantity 
        ELSE 0
      END
     ) AS "11月"
FROM 
  Sales 
WHERE 
  YEAR( SaleDate ) = 2006 
GROUP BY 
  CustomerID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客ID
     , "9月"
     , "10月"
     , "11月"
     FROM
         (
          SELECT
            顧客ID
          , "9月"
          , "10月"
          , "11月"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            顧客ID
          , "9月"
          , "10月"
          , "11月"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客ID
     , "9月"
     , "10月"
     , "11月"
     FROM
         (
          SELECT 
            顧客ID
          , "9月"
          , "10月"
          , "11月"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            顧客ID
          , "9月"
          , "10月"
          , "11月"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルCustomersをPrefecturalID（都道府県ID）でグループ化したとき、CustomerClassID（顧客クラス）を次の2つに区分けして、それぞれの顧客数を表示しなさい。「法人：CustomerClassIDが1」「個人：CustomerClassIDが2」]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  PrefecturalID AS 都道府県ID 
, SUM(
      CASE
        WHEN CustomerClassID = 1 THEN 1
        ELSE 0
      END
     ) AS 法人 
, SUM(
      CASE
        WHEN CustomerClassID = 2 THEN 1
        ELSE 0
      END
     ) AS 個人 
FROM 
  Customers 
GROUP BY 
  PrefecturalID 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 都道府県ID
     , 法人
     , 個人
     FROM
         (
          SELECT
            都道府県ID
          , 法人
          , 個人
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            都道府県ID
          , 法人
          , 個人
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 都道府県ID
     , 法人
     , 個人
     FROM
         (
          SELECT 
            都道府県ID
          , 法人
          , 個人
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            都道府県ID
          , 法人
          , 個人
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesをHireFiscalYear（入社年度）でグループ化したとき、Weight（体重）を次の4つの範囲に分けて、それぞれの人数を表示しなさい。「50kg以下（別名は「50kg以下」とします）：Weightが50以下」「60kg以下（別名は「51～60kg」とします）：Weightが60以下」「80kg以下（別名は「61～80kg」とします）：Weightが80以下」「80kg超（別名は「80kg超」とします）：Weightが80より大きい」]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  HireFiscalYear AS 入社年度 
, SUM(
      CASE
        WHEN Weight <= 50 THEN 1
        ELSE 0
      END
     ) AS "50kg以下" 
, SUM(
      CASE
        WHEN Weight <= 60 THEN 1
        ELSE 0
      END
     ) AS "51～60kg" 
, SUM(
      CASE
        WHEN Weight <= 80 THEN 1
        ELSE 0
      END
     ) AS "61～80kg"  
, SUM(
      CASE
        WHEN Weight > 80 THEN 1 
        ELSE 0 
      END
     ) AS "80kg超"  
FROM 
  Employees 
GROUP BY 
  HireFiscalYear 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 入社年度
     , "50kg以下"
     , "51～60kg"
     , "61～80kg"
     , "80kg超"
     FROM
         (
          SELECT
            入社年度
          , "50kg以下"
          , "51～60kg"
          , "61～80kg"
          , "80kg超"
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            入社年度
          , "50kg以下"
          , "51～60kg"
          , "61～80kg"
          , "80kg超"
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 入社年度
     , "50kg以下"
     , "51～60kg"
     , "61～80kg"
     , "80kg超"
     FROM
         (
          SELECT 
            入社年度
          , "50kg以下"
          , "51～60kg"
          , "61～80kg"
          , "80kg超"
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            入社年度
          , "50kg以下"
          , "51～60kg"
          , "61～80kg"
          , "80kg超"
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">HireFiscalYear</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-14-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その15】並び替えを行う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今、うちの会社が扱っている商品の名前を単価の安い順に一覧で全部出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductName
FROM
  Products
ORDER BY
  Price
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 自動付加行番号
     , ProductName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 自動付加行番号
     , ProductName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesをBirthdayで昇順に並べ、EmployeeID、EmployeeName、Birthdayを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 
FROM
  
ORDER BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID 
, EmployeeName 
, Birthday 
FROM 
  Employees 
ORDER BY 
  Birthday 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , EmployeeID
     , EmployeeName
     , Birthday
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , Birthday
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , Birthday
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , EmployeeID
     , EmployeeName
     , Birthday
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , Birthday
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , Birthday
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalesをCustomerID、ProductIDで昇順、SaleDate降順に並べ、SaleID、Quantity、CustomerID、ProductID、SaleDateを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 
, 
, 
FROM
  
ORDER BY
  
, 
,  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SaleID 
, Quantity 
, CustomerID 
, ProductID 
, SaleDate 
FROM 
  Sales 
ORDER BY 
  CustomerID 
, ProductID 
, SaleDate DESC
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , SaleID
     , Quantity
     , CustomerID
     , ProductID
     , SaleDate
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , Quantity
          , CustomerID
          , ProductID
          , SaleDate
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , Quantity
          , CustomerID
          , ProductID
          , SaleDate
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , SaleID
     , Quantity
     , CustomerID
     , ProductID
     , SaleDate
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , Quantity
          , CustomerID
          , ProductID
          , SaleDate
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , Quantity
          , CustomerID
          , ProductID
          , SaleDate
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsのPriceが1,000以下のデータをCategoryIDでグループ化し、レコード数が5未満のデータをCategoryIDで昇順に並べCategoryID、レコード数を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[ 
  
,  AS 商品数

  

   <= 1000

  

   < 5

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  CategoryID 
, COUNT(*) AS 商品数 
FROM 
  Products 
WHERE 
  Price <= 1000 
GROUP BY 
  CategoryID 
HAVING 
  COUNT(*) < 5 
ORDER BY
  CategoryID 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , CategoryID
     , 商品数
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CategoryID
          , 商品数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CategoryID
          , 商品数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , CategoryID
     , 商品数
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CategoryID
          , 商品数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CategoryID
          , 商品数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalaryをEmployeeIDでグループ化、Amountを合計し、Amount合計が多い順に並べてEmployeeID（別名は「社員ID」）、Amount合計（別名は「給与合計」）を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  EmployeeID AS 社員ID 
, SUM( Amount ) AS 給与合計 
FROM 
  Salary 
GROUP BY 
  EmployeeID 
ORDER BY
  給与合計 DESC
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , 社員ID
     , 給与合計
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 社員ID
          , 給与合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 社員ID
          , 給与合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , 社員ID
     , 給与合計
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 社員ID
          , 給与合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 社員ID
          , 給与合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルBelongToで現在所属しているEmployee（EndDateがNULL）をカウントし、レコードの多い順にDepartmentID（別名は「部署ID」）、レコード数を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT 
  DepartmentID AS 部署ID
, COUNT(*) AS レコード数 
FROM 
  BelongTo 
WHERE 
  EndDate IS NULL 
GROUP BY  
  DepartmentID
ORDER BY 
  COUNT( EmployeeID ) DESC 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , 部署ID
     , レコード数
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 部署ID
          , レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 部署ID
          , レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , 部署ID
     , レコード数
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 部署ID
          , レコード数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 部署ID
          , レコード数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/belongto.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-15-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その16】重複を排除する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[顧客の中で同じ住所のデータがあるよね。住所だけで一覧を出してくれ。ダブってるのはまとめてくれて構わないから]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT
  Address AS 住所
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
     '0' AS 状態
     , 住所
     FROM
         (
          SELECT 
            住所
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            住所
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
     '1' AS 状態
     , 住所
     FROM
         (
          SELECT 
            住所
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            住所
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">Address</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesから重複を除いてHireFiscalYearを求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT DISTINCT
  
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT 
  HireFiscalYear 
FROM 
  Employees 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , HireFiscalYear
     FROM
         (
          SELECT
            HireFiscalYear
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            HireFiscalYear
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , HireFiscalYear
     FROM
         (
          SELECT 
            HireFiscalYear
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            HireFiscalYear
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">HireFiscalYear</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalesから重複を除いてCustomerID、ProductIDを求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT 
  
, 
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT 
  CustomerID 
, ProductID 
FROM 
  Sales 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CustomerID
     , ProductID
     FROM
         (
          SELECT
            CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CustomerID
     , ProductID
     FROM
         (
          SELECT 
            CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルCustomersから重複を除いて、CustomerClassID、PrefecturalIDを求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[ 
  
, 

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT 
  CustomerClassID 
, PrefecturalID 
FROM 
  Customers 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CustomerClassID
     , PrefecturalID
     FROM
         (
          SELECT
            CustomerClassID
          , PrefecturalID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            CustomerClassID
          , PrefecturalID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CustomerClassID
     , PrefecturalID
     FROM
         (
          SELECT 
            CustomerClassID
          , PrefecturalID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            CustomerClassID
          , PrefecturalID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerClassID</append>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesから重複を除いてCustomerID、ProductID、EmployeeIDを求めなさい。結果を第2問の結果と比較しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT 
  CustomerID 
, ProductID 
, EmployeeID 
FROM 
  Sales 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CustomerID
     , ProductID
     , EmployeeID
     FROM
         (
          SELECT 
            CustomerID
          , ProductID
          , EmployeeID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            CustomerID
          , ProductID
          , EmployeeID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CustomerID
     , ProductID
     , EmployeeID
     FROM
         (
          SELECT 
            CustomerID
          , ProductID
          , EmployeeID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            CustomerID
          , ProductID
          , EmployeeID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerID</append>
          
          <append point="order">ProductID</append>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルProductsから重複を除いてPrice、CategoryIDを求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT 
  Price 
, CategoryID 
FROM 
  Products 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , Price
     , CategoryID
     FROM
         (
          SELECT
            Price
          , CategoryID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            Price
          , CategoryID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , Price
     , CategoryID
     FROM
         (
          SELECT 
            Price
          , CategoryID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            Price
          , CategoryID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">Price</append>
          
          <append point="order">CategoryID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-2-16-05.xls</expected-file-path>
      </entry>
      
    </section>
    
  </chapter>
  
  <chapter name="第3章　複数のテーブルを扱う">
    
    <section name="【その1】副問い合わせを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[ひょっとして全然売れてない商品があるんじゃないか？今まで一度も販売されたことがない商品の一覧を出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  *
FROM
  Products
WHERE
  ProductID NOT IN
  (
   SELECT
     ProductID
   FROM
     Sales
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , *
     FROM
         (
          SELECT 
            *
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            *
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , *
     FROM
         (
          SELECT 
            *
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            *
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesから各EmployeeIDについて、SalaryのAmountの最高が300,000以上のデータを取り出し、EmployeeID、EmployeeNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
FROM
  
WHERE
   IN
  (
   SELECT
     
   FROM
     
   GROUP BY
     
   HAVING
      >= 300000
  )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID 
, EmployeeName 
FROM 
  Employees 
WHERE 
  EmployeeID IN
  (
   SELECT 
     EmployeeID 
   FROM 
     Salary 
   GROUP BY 
     EmployeeID 
   HAVING 
     MAX( Amount ) >= 300000
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeID
     , EmployeeName
     FROM
         (
          SELECT 
            EmployeeID
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeID
     , EmployeeName
     FROM
         (
          SELECT
            EmployeeID
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalesのQuantityが100以上のレコードを取り出し、SaleID、Quantity、CustomerID、CustomerNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 
, (
   
     
   
     
   
      = 
  ) AS 顧客名
FROM
  
WHERE
   >= 100
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SaleID 
, Quantity 
, CustomerID 
, (
   SELECT
     CustomerName 
   FROM 
     Customers 
   WHERE
     CustomerID = Sales.CustomerID 
  ) AS 顧客名 
FROM 
  Sales 
WHERE 
  Quantity >= 100
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , SaleID 
     , Quantity 
     , CustomerID
     , 顧客名
     FROM
         (
          SELECT 
            SaleID 
          , Quantity 
          , CustomerID
          , 顧客名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            SaleID 
          , Quantity 
          , CustomerID
          , 顧客名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , SaleID 
     , Quantity 
     , CustomerID
     , 顧客名
     FROM
         (
          SELECT
            SaleID 
          , Quantity 
          , CustomerID
          , 顧客名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            SaleID 
          , Quantity 
          , CustomerID
          , 顧客名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsからSalesでQuantityの合計が100以上のレコードを取り出し、ProductID、ProductNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 

  

   IN
  (
   
     
   
     
   
     
   
      >= 100
  )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID 
, ProductName 
FROM 
  Products 
WHERE 
  ProductID IN
  (
   SELECT 
     ProductID 
   FROM 
     Sales 
   GROUP BY 
     ProductID 
   HAVING 
     SUM( Quantity ) >= 100
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT 
           ProductID
         , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           ProductID
         , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT
           ProductID
         , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           ProductID
         , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[第1問でAmountの最高額（別名は「最高給与額」）も表示するよう変更しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID 
, EmployeeName 
, (
   SELECT
     MAX( Amount )
   FROM
     Salary 
   WHERE
     EmployeeID = Employees.EmployeeID 
  ) AS 最高給与額
FROM 
  Employees 
WHERE 
  EmployeeID IN
  (
   SELECT 
     EmployeeID 
   FROM 
     Salary 
   GROUP BY 
     EmployeeID 
   HAVING 
     MAX( Amount ) >= 300000
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeID
     , EmployeeName
     , 最高給与額
     FROM
         (
          SELECT 
            EmployeeID
          , EmployeeName
          , 最高給与額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , EmployeeName
          , 最高給与額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeID
     , EmployeeName
     , 最高給与額
     FROM
         (
          SELECT
            EmployeeID
          , EmployeeName
          , 最高給与額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , EmployeeName
          , 最高給与額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[第2問で商品名も表示するよう変更しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SaleID 
, Quantity 
, CustomerID 
, (
   SELECT
     CustomerName 
   FROM 
     Customers 
   WHERE
     CustomerID = Sales.CustomerID 
  ) AS 顧客名 
, (
   SELECT 
     ProductName 
   FROM 
     Products 
   WHERE 
     ProductID = Sales.ProductID 
  ) AS 商品名 
FROM 
  Sales 
WHERE 
  Quantity >= 100
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , SaleID
     , Quantity
     , CustomerID
     , 顧客名
     , 商品名
     FROM
         (
          SELECT 
            SaleID
          , Quantity
          , CustomerID
          , 顧客名
          , 商品名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            SaleID
          , Quantity
          , CustomerID
          , 顧客名
          , 商品名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , SaleID
     , Quantity
     , CustomerID
     , 顧客名
     , 商品名
     FROM
         (
          SELECT
            SaleID
          , Quantity
          , CustomerID
          , 顧客名
          , 商品名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            SaleID
          , Quantity
          , CustomerID
          , 顧客名
          , 商品名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-01-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その2】複数テーブルの結合を行う（1）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[都道府県別に、それぞれ何人ずつ顧客がいるのか教えてくれ。そうそう、この前のは都道府県の名前が出てなかったぞ。ID だけじゃわからないのでちゃんと表示してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  Customers.PrefecturalID
, Prefecturals.PrefecturalName AS 都道府県名
, COUNT(*) AS 顧客数
FROM
  Customers
    JOIN
  Prefecturals
    ON Customers.PrefecturalID = Prefecturals.PrefecturalID
GROUP BY
  Customers.PrefecturalID
, Prefecturals.PrefecturalName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , PrefecturalID
     , 都道府県名
     , 顧客数
     FROM
         (
          SELECT 
            PrefecturalID
          , 都道府県名
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            PrefecturalID
          , 都道府県名
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , PrefecturalID
     , 都道府県名
     , 顧客数
     FROM
         (
          SELECT 
            PrefecturalID
          , 都道府県名
          , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            PrefecturalID
          , 都道府県名
          , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
          <append point="order">PrefecturalName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalaryとEmployeesを結合してEmployeeName、PayDate、AmountをEmployeeID昇順で表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 
FROM 
   AS A 
    JOIN 
   AS B 
    ON  = 
ORDER BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  B.EmployeeName
, A.PayDate
, A.Amount
FROM
  Salary AS A
    JOIN
  Employees AS B
    ON A.EmployeeID = B.EmployeeID
ORDER BY
  B.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , PayDate
     , Amount
     FROM
         (
          SELECT 
           EmployeeName
         , PayDate
         , Amount
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           EmployeeName
         , PayDate
         , Amount
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , PayDate
     , Amount
     FROM
         (
          SELECT
           EmployeeName
         , PayDate
         , Amount
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           EmployeeName
         , PayDate
         , Amount
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PayDate</append>
          
          <append point="order">Amount</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSales、Customers、Employees、Productsを結合して、Sales.Quantityが200以上のデータについてQuantity、CustomerName、ProductName、EmployeeNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
, 
, 
FROM
   AS A
    JOIN
   AS B
    ON 
      JOIN
     AS C
      ON 
        JOIN
        AS D
        ON 
WHERE
   >= 200
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.Quantity
, B.CustomerName
, C.ProductName
, D.EmployeeName
FROM
  Sales AS A
    JOIN
  Customers AS B
    ON A.CustomerID = B.CustomerID
      JOIN
    Products AS C
      ON A.ProductID = C.ProductID
        JOIN
      Employees AS D
        ON A.EmployeeID = D.EmployeeID
WHERE
  A.Quantity >= 200
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , Quantity
     , CustomerName
     , ProductName
     , EmployeeName
     FROM
         (
          SELECT 
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , Quantity
     , CustomerName
     , ProductName
     , EmployeeName
     FROM
         (
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerName</append>
          
          <append point="order">ProductName</append>
          
          <append point="order">EmployeeName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesとProductsを結合し、SalesをProductIDでグループ化、Quantityの合計が300以上のデータについてQuantity合計、ProductID、ProductNameを表示しなさい。JOINを使用すること。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 
,  AS 数量合計

   AS A
    
   AS B
    

  
, 

  >= 300 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
, B.ProductName
, SUM( A.Quantity ) AS 数量合計
FROM
  Sales AS A
    JOIN
  Products B
    ON A.ProductID = B.ProductID
GROUP BY
  A.ProductID
, B.ProductName
HAVING
  SUM( A.Quantity ) >= 300
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductID
     , ProductName
     , 数量合計
     FROM
         (
          SELECT 
           ProductID
         , ProductName
          , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           ProductID
         , ProductName
         , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductID
     , ProductName
     , 数量合計
     FROM
         (
          SELECT
           ProductID
         , ProductName
         , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           ProductID
         , ProductName
         , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
          <append point="order">ProductName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[第2問をJOINを用いずに書きなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.Quantity
, B.CustomerName
, C.ProductName
, D.EmployeeName
FROM
  Sales AS A
, Customers B
, Products C
, Employees D
WHERE
  A.Quantity >= 200
  AND
  A.CustomerID = B.CustomerID
  AND
  A.ProductID = C.ProductID
  AND
  A.EmployeeID = D.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , Quantity
     , CustomerName
     , ProductName
     , EmployeeName
     FROM
         (
          SELECT 
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , Quantity
     , CustomerName
     , ProductName
     , EmployeeName
     FROM
         (
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            Quantity
          , CustomerName
          , ProductName
          , EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerName</append>
          
          <append point="order">ProductName</append>
          
          <append point="order">EmployeeName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomers、Prefecturals、CustomerClassesをWHERE句を使って結合し、PrefecturalID昇順で並べ、CustomerName、PrefecturalName、CustomerClassNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.CustomerName
, B.PrefecturalName
, C.CustomerClassName
FROM
  Customers A
, Prefecturals B
, CustomerClasses C
WHERE
  A.PrefecturalID = B.PrefecturalID
  AND
  A.CustomerClassID = C.CustomerClassID
ORDER BY
  A.PrefecturalID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , CustomerName
     , PrefecturalName
     , CustomerClassName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerName
          , PrefecturalName
          , CustomerClassName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerName
          , PrefecturalName
          , CustomerClassName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , CustomerName
     , PrefecturalName
     , CustomerClassName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerName
          , PrefecturalName
          , CustomerClassName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerName
          , PrefecturalName
          , CustomerClassName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
          <path>drill/prepare/customerclasses.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-02-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その3】複数テーブルの結合を行う（2）">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[部門別の平均給与額を一覧で出してくれ。ちゃんと部門名を入れてくれよ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  d.DepartmentName AS 部門名
, AVG( s.Amount ) AS 部門別平均給与額
FROM
  Salary AS s
    JOIN
  BelongTo AS b
    ON s.EmployeeID  = b.EmployeeID
        JOIN
      Departments AS d
        ON b.DepartmentID = d.DepartmentID
GROUP BY
  d.DepartmentName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 部門名
     , 部門別平均給与額
     FROM
         (
          SELECT 
            部門名
          , 部門別平均給与額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            部門名
          , 部門別平均給与額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 部門名
     , 部門別平均給与額
     FROM
         (
          SELECT 
            部門名
          , 部門別平均給与額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            部門名
          , 部門別平均給与額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">DepartmentName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
          <path>drill/prepare/belongto.xls</path>
          
          <path>drill/prepare/departments.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSales、Products、Categoriesを連結し、SalesをCategoryIDでグループ化、CategoryID、CategoryName、Quantityの合計を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT

,  AS カテゴリ名
,  AS 数量合計
FROM
   AS A
    JOIN
   AS B
      ON =
        JOIN
      AS C
        ON =
GROUP BY

;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  B.CategoryID
, MAX( C.CategoryName ) AS カテゴリ名
, SUM( A.Quantity ) AS 数量合計
FROM
  Sales AS A
    JOIN
  Products B
      ON A.ProductID = B.ProductID
        JOIN
      Categories C
        ON B.CategoryID = C.CategoryID
GROUP BY
  B.CategoryID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CategoryID
     , カテゴリ名
     , 数量合計
     FROM
         (
          SELECT 
           CategoryID
         , カテゴリ名
         , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           CategoryID
         , カテゴリ名
         , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CategoryID
     , カテゴリ名
     , 数量合計
     FROM
         (
          SELECT
           CategoryID
         , カテゴリ名
         , 数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           CategoryID
         , カテゴリ名
         , 数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CategoryID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/categories.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSales、Customers、Prefecturalsを結合し、PrefecturalIDでグループ化、Quantityの合計、PrefecturalID、PrefecturalNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 合計数量
, 
,  AS 県名
FROM
   AS A
    JOIN
   AS B
    ON 
      JOIN
     AS C
      ON 
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SUM( A.Quantity ) AS 合計数量
, B.PrefecturalID
, MAX( C.PrefecturalName ) AS 県名
FROM
  Sales AS A
    JOIN
  Customers AS B
    ON A.CustomerID = B.CustomerID
      JOIN
    Prefecturals C
      ON B.PrefecturalID = C.PrefecturalID
GROUP BY
  B.PrefecturalID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 合計数量
     , PrefecturalID
     , 県名
     FROM
         (
          SELECT 
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 合計数量
     , PrefecturalID
     , 県名
     FROM
         (
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSales、Customers、CustomerClassesを結合し、CustomerClassIDでグループ化、Quantityの最大値、CustomerClassID、CustomerClassNameを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS 最大数量
,
,  AS 顧客クラス名

   AS A

   AS B


     AS C



;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  MAX( A.Quantity ) AS 最大数量
, B.CustomerClassID
, MIN( C.CustomerClassName ) AS 顧客クラス名
FROM
  Sales AS A
    JOIN
  Customers AS B
    ON A.CustomerID = B.CustomerID
      JOIN
    CustomerClasses C
      ON B.CustomerClassID = C.CustomerClassID
GROUP BY
  B.CustomerClassID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 最大数量
     , CustomerClassID
     , 顧客クラス名
     FROM
         (
          SELECT 
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 最大数量
     , CustomerClassID
     , 顧客クラス名
     FROM
         (
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerClassID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/customerclasses.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[第2問をJOINを用いずに書きなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  SUM( A.Quantity ) AS 合計数量
, B.PrefecturalID
, MAX( C.PrefecturalName ) AS 県名
FROM
  Sales AS A
, Customers AS B
, Prefecturals C
WHERE
  A.CustomerID = B.CustomerID
  AND
  B.PrefecturalID = C.PrefecturalID
GROUP BY
  B.PrefecturalID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 合計数量
     , PrefecturalID
     , 県名
     FROM
         (
          SELECT 
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 合計数量
     , PrefecturalID
     , 県名
     FROM
         (
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            合計数量
          , PrefecturalID
          , 県名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[第3問をJOINを用いずに書きなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  MAX( A.Quantity ) AS 最大数量
, B.CustomerClassID
, MIN( C.CustomerClassName ) AS 顧客クラス名
FROM
  Sales AS A
    JOIN
  Customers AS B
    ON A.CustomerID = B.CustomerID
      JOIN
    CustomerClasses C
      ON B.CustomerClassID = C.CustomerClassID
GROUP BY
  B.CustomerClassID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM
    (
     SELECT
       '0' AS 状態
     , 最大数量
     , CustomerClassID
     , 顧客クラス名
     FROM
         (
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 最大数量
     , CustomerClassID
     , 顧客クラス名
     FROM
         (
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           最大数量
         , CustomerClassID
         , 顧客クラス名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerClassID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/customerclasses.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-03-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その4】外部結合を使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[金額ベースで全部の売上についての平均を知りたいな。全部の商品の平均販売単価を一覧で出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  p.ProductName
, AVG( p.Price *
       CASE
         WHEN s.Quantity IS NULL THEN 0
         ELSE s.Quantity
       END
     ) AS 平均販売価格
FROM
  Products AS p
    LEFT OUTER JOIN
  Sales AS s
    ON s.ProductID = p.ProductID
GROUP BY
  p.ProductName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductName
     , 平均販売価格
     FROM
         (
          SELECT 
            ProductName
          , 平均販売価格
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            ProductName
          , 平均販売価格
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductName
     , 平均販売価格
     FROM
         (
          SELECT 
            ProductName
          , 平均販売価格
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            ProductName
          , 平均販売価格
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomers、Salesを外部結合してCustomerIDごとのQuantity合計を求めてCustomerNameと合計を表示しなさい。ただしSalesデータが存在しないCustomerIDの合計は0を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, SUM( 
      CASE
        WHEN  IS NULL THEN 0
        ELSE 
      END
     ) AS 販売数量合計
FROM
   AS A
    LEFT OUTER JOIN
   AS B
    ON  = 
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.CustomerName
, SUM( 
      CASE
        WHEN B.CustomerID IS NULL THEN 0
        ELSE B.Quantity
      END
     ) AS 販売数量合計
FROM
  Customers AS A
    LEFT OUTER JOIN
  Sales AS B
    ON A.CustomerID = B.CustomerID
GROUP BY
  A.CustomerName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , CustomerName
     , 販売数量合計
     FROM
         (
          SELECT 
           CustomerName
         , 販売数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           CustomerName
         , 販売数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , CustomerName
     , 販売数量合計
     FROM
         (
          SELECT
           CustomerName
         , 販売数量合計
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           CustomerName
         , 販売数量合計
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">CustomerName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployees、Salesを外部結合し、EmployeeIDごとのSalesレコード数を求めてEmployeeID、社員名と販売件数を表示しなさい。ただし、Salesデータが存在しない場合は0を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, MAX  AS 社員名
, SUM(
       CASE
         WHEN  IS NULL THEN 0
         ELSE 1
       END
     ) AS 販売件数
FROM
   AS A
    LEFT OUTER JOIN
   AS B
    ON 
GROUP BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.EmployeeID
, MAX( A.EmployeeName ) AS 社員名
, SUM(
       CASE
         WHEN B.EmployeeID IS NULL THEN 0
         ELSE 1
       END
     ) AS 販売件数
FROM
  Employees AS A
    LEFT OUTER JOIN
  Sales AS B
    ON A.EmployeeID = B.EmployeeID
GROUP BY
  A.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeID
     , 社員名
     , 販売件数
     FROM
         (
          SELECT 
            EmployeeID
          , 社員名
          , 販売件数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , 社員名
          , 販売件数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeID
     , 社員名
     , 販売件数
     FROM
         (
          SELECT
            EmployeeID
          , 社員名
          , 販売件数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , 社員名
          , 販売件数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルPrefecturals、Customersを外部結合し、PrefecturalIDごとのCustomersレコード数を求め、PrefecturalNameとレコード数を表示しなさい。ただしCustomersデータが存在しない場合は0を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
,  (
      
        
        
      
     ) AS 顧客数

   AS A
    
   AS B
    

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.PrefecturalName
, SUM(
      CASE
        WHEN B.PrefecturalID IS NULL THEN 0
        ELSE 1
      END
     ) AS 顧客数
FROM
  Prefecturals AS A
    LEFT OUTER JOIN
  Customers AS B
    ON A.PrefecturalID = B.PrefecturalID
GROUP BY
  A.PrefecturalName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , PrefecturalName
     , 顧客数
     FROM
         (
          SELECT 
           PrefecturalName
         , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           PrefecturalName
         , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , PrefecturalName
     , 顧客数
     FROM
         (
          SELECT
           PrefecturalName
         , 顧客数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           PrefecturalName
         , 顧客数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">PrefecturalName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployees、Salesを使った副問い合わせを外部結合し、EmployeeIDごとの販売件数を求めなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.EmployeeID
, CASE
    WHEN B.CNT IS NULL THEN 0
    ELSE B.CNT
  END AS 販売件数
FROM
  Employees AS A
    LEFT OUTER JOIN
  (
   SELECT
     EmployeeID
   , COUNT(*) AS CNT
   FROM
     Sales
   GROUP BY
     EmployeeID
  ) AS B
    ON A.EmployeeID = B.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeID
     , 販売件数
     FROM
         (
          SELECT 
            EmployeeID
          , 販売件数
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , 販売件数
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeID
     , 販売件数
     FROM
         (
          SELECT
            EmployeeID
          , 販売件数
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            EmployeeID
          , 販売件数
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployees、SalaryからEmployeeごとの'2007-02-25'支給のAmountを求めて、EmployeeName、Amount（別名は「支給額」）を表示しなさい。Amountデータが存在しない場合は0を表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.EmployeeName
, (
   CASE
     WHEN B.Amount IS NULL THEN 0
     ELSE B.Amount
   END
  ) AS 支給額
FROM
  Employees AS A
    LEFT OUTER JOIN
  (
   SELECT
     EmployeeID
   , Amount
   FROM
     Salary
   WHERE
     PayDate = '2007-02-25'
  ) AS B
    ON A.EmployeeID = B.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     , 支給額
     FROM
         (
          SELECT
           EmployeeName
         , 支給額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           EmployeeName
         , 支給額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     , 支給額
     FROM
         (
          SELECT
           EmployeeName
         , 支給額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           EmployeeName
         , 支給額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeName</append>
          
          <append point="order">支給額</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-04-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その5】自己結合を使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[違うカテゴリーのものを組み合わせて、セット商品にすることを考えている。ついては、カテゴリーの違う商品同士で合計価格が2500円以上になる組み合わせの一覧を出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  p1.ProductName AS 商品名1
, p2.ProductName AS 商品名2
, ( p1.Price  + p2.Price ) AS セット価格
FROM
  Products AS p1
    JOIN
  Products AS p2
    ON p1.ProductID < p2.ProductID
    AND p1.CategoryID <> p2.CategoryID
WHERE
  ( p1.Price + p2.Price ) > 2500
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品名1
     , 商品名2
     , セット価格
     FROM
         (
          SELECT 
            商品名1
          , 商品名2
          , セット価格
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            商品名1
          , 商品名2
          , セット価格
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品名1
     , 商品名2
     , セット価格
     FROM
         (
          SELECT 
            商品名1
          , 商品名2
          , セット価格
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            商品名1
          , 商品名2
          , セット価格
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">商品名1</append>
          
          <append point="order">商品名2</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[同じカテゴリーの商品同士を組み合わせて、商品名をそれぞれ表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 商品名1
,  AS 商品名2
FROM
   AS p1
    JOIN
   AS p2
    ON  < 
    AND  = 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  p1.ProductName AS 商品名1
, p2.ProductName AS 商品名2
FROM
  Products AS p1
    JOIN
  Products AS p2
    ON p1.ProductID < p2.ProductID
    AND p1.CategoryID = p2.CategoryID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 商品名1
     , 商品名2
     FROM
         (
          SELECT 
           商品名1
         , 商品名2
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           商品名1
         , 商品名2
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 商品名1
     , 商品名2
     FROM
         (
          SELECT
           商品名1
         , 商品名2
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           商品名1
         , 商品名2
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">p1.ProductID</append>
          
          <append point="order">p2.ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[同じ都道府県の顧客同士で、かつ同じCustomerClassIDを持つ顧客同士を組み合わせて、顧客名をそれぞれ表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS 顧客名1
,  AS 顧客名2
FROM
   AS c1
    JOIN
   AS c2
    ON  < 
    AND  = 
    AND  = 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  c1.CustomerName AS 顧客名1
, c2.CustomerName AS 顧客名2
FROM
  Customers AS c1
    JOIN
  Customers AS c2
    ON c1.CustomerID < c2.CustomerID
    AND c1.PrefecturalID = c2.PrefecturalID
    AND c1.CustomerClassID = c2.CustomerClassID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客名1
     , 顧客名2
     FROM
         (
          SELECT 
            顧客名1
          , 顧客名2
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            顧客名1
          , 顧客名2
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客名1
     , 顧客名2
     FROM
         (
          SELECT
            顧客名1
          , 顧客名2
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            顧客名1
          , 顧客名2
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">c1.CustomerID</append>
          
          <append point="order">c2.CustomerID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[従業員同士で、かつ年齢が自分よりも年上（つまり自分よりもBirthdayの値が小さい）人との組み合わせを表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  AS 従業員名1
, AS 従業員名2

  
    
  
     > 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  e1.EmployeeName AS 従業員名1
, e2.EmployeeName AS 従業員名2
FROM
  Employees AS e1
    JOIN
  Employees AS e2
    ON e1.Birthday > e2.Birthday
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 従業員名1
     , 従業員名2
     FROM
         (
          SELECT 
           従業員名1
         , 従業員名2
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           従業員名1
         , 従業員名2
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 従業員名1
     , 従業員名2
     FROM
         (
          SELECT
           従業員名1
         , 従業員名2
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           従業員名1
         , 従業員名2
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">e1.EmployeeName</append>
          
          <append point="order">e2.EmployeeName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[カテゴリー同士を組み合わせて、カテゴリー名をそれぞれ表示しなさい（別名は「カテゴリー1」「カテゴリー2」）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  c1.CategoryName AS カテゴリ名1
, c2.CategoryName AS カテゴリ名2
FROM
  Categories AS c1
    JOIN
  Categories AS c2
    ON c1.CategoryID < c2.CategoryID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , カテゴリ名1
     , カテゴリ名2
     FROM
         (
          SELECT 
            カテゴリ名1
          , カテゴリ名2
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            カテゴリ名1
          , カテゴリ名2
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , カテゴリ名1
     , カテゴリ名2
     FROM
         (
          SELECT
            カテゴリ名1
          , カテゴリ名2
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            カテゴリ名1
          , カテゴリ名2
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">c1.CategoryName</append>
          
          <append point="order">c2.CategoryName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/categories.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[第2問に対して、PrefecturalIDが13以外のものだけに絞り込んでください。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  c1.CustomerName AS 顧客名1
, c2.CustomerName AS 顧客名2
FROM
  Customers AS c1
    JOIN
  Customers AS c2
    ON c1.CustomerID < c2.CustomerID
    AND c1.PrefecturalID = c2.PrefecturalID
    AND c1.CustomerClassID = c2.CustomerClassID
WHERE
  c1.PrefecturalID <> 13
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 顧客名1
     , 顧客名2
     FROM
         (
          SELECT
           顧客名1
         , 顧客名2
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
           顧客名1
         , 顧客名2
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 顧客名1
     , 顧客名2
     FROM
         (
          SELECT
           顧客名1
         , 顧客名2
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
           顧客名1
         , 顧客名2
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">c1.CustomerName</append>
          
          <append point="order">c2.CustomerName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-05-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その6】相関副問い合わせを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[商品ごとの販売数量の平均を上回った日を一覧で出してくれ。商品単位で比較してくれよ。あ、商品名は当然つけてくれよ。結果はProductIDの昇順、SaleDateの降順で出力してくれ。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  p.ProductName
, s1.SaleDate
FROM
  Sales AS s1
    JOIN
  Products AS p
    ON s1.ProductID = p.ProductID
WHERE
  s1.Quantity >
  (
   SELECT
     AVG( Quantity )
   FROM
     Sales AS s2
   WHERE
     s1.ProductID = s2.ProductID
  )
ORDER BY p.ProductID, s1.SaleDate DESC
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductName
     , SaleDate
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          , SaleDate
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          , SaleDate
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductName
     , SaleDate
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          , SaleDate
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductName
          , SaleDate
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductName</append>
          
          <append point="order">SaleDate</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalesでProductIDごとのQuantityの最大値を求め、ProductID、ProductName、最大QuantityをProductID昇順で表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT DISTINCT
  
, 
, 
FROM
   AS A 
    JOIN
   AS B 
    ON  = 
WHERE
   = 
  (
   SELECT
     MAX(  )
   FROM
      AS C
   WHERE
      = 
  )
ORDER BY
  A.ProductID
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT DISTINCT
  A.ProductID
, B.ProductName
, A.Quantity
FROM
  Sales AS A
    JOIN
  Products AS B
    ON A.ProductID = B.ProductID
WHERE
  A.Quantity =
  (
   SELECT
     MAX( Quantity )
   FROM
     Sales AS C
   WHERE
     A.ProductID = C.ProductID
  )
ORDER BY
  A.ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , Quantity
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , Quantity
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルProductsから、テーブルSalesにあるProductIDとそのProductNameを表示しなさい（第3問および、第3章その9第3問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
  
, 
FROM
   AS A
WHERE
  EXISTS
  (
   SELECT
     
   FROM
      AS B
   WHERE
      =  
  )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
, ProductName
FROM
  Products AS A
WHERE
  EXISTS
  (
   SELECT
     'X'
   FROM
     Sales AS B
   WHERE
     A.ProductID = B.ProductID )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT 
            ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsから、テーブルSalesにないProductIDとそのProductNameを表示しなさい（第2問および、第3章その10第3問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
  
, 

   AS A

  
  (
   
     
   
      AS B
   
      =  
  )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
, ProductName
FROM
  Products AS A
WHERE
  NOT EXISTS
  (
   SELECT
     'X'
   FROM
     Sales AS B
   WHERE
     A.ProductID = B.ProductID )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT 
            ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ProductID
     , ProductName
     FROM
         (
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[第1問をJOINを使って書きなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
, B.ProductName
, A.Quantity
FROM
  (
   SELECT
     ProductID
   , MAX( Quantity ) AS Quantity
   FROM
     Sales
   GROUP BY
     ProductID
  ) AS A
    JOIN
  Products AS B
    ON A.ProductID = B.ProductID
ORDER BY
  A.ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , Quantity
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , Quantity
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , Quantity
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesで、ProductIDごとのQuantityの平均値と最大値を求め、最大値÷10が平均値以上のProductIDとProductNameをProductID順に表示しなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
, ProductName
FROM
  Products AS A
WHERE
  ProductID IN
  (
   SELECT
     ProductID
   FROM
     Sales AS B
   WHERE
     A.ProductID = B.ProductID
   GROUP BY
     ProductID
   HAVING
     AVG( Quantity ) <= MAX( Quantity )/10
  )
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-06-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その7】UNION ALLを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[世の中どんな名前があるのか興味あるよね。一覧で出してくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerName AS 氏名
FROM
  Customers
UNION ALL
SELECT
  EmployeeName AS 氏名
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            氏名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">氏名</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルDepartmentsとCategoriesをUNION ALLで1つにまとめなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS ID
,  AS 名前
FROM
  
UNION ALL
SELECT
   AS ID
,  AS 名前
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  DepartmentID AS ID
, DepartmentName AS 名前
FROM
  Departments
UNION ALL
SELECT
  CategoryID AS ID
, CategoryName AS 名前
FROM
  Categories
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ID
     , 名前
     FROM
         (
          SELECT
            ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ID
     , 名前
     FROM
         (
          SELECT
            ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ID</append>
          
          <append point="order">名前</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/departments.xls</path>
          
          <path>drill/prepare/categories.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルDepartmentsとCategoriesをテーブル名を付してUNION ALLで1つにまとめなさい。結果をテーブル名、IDの昇順に並べなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT 
  '' AS テーブル名 
,  AS ID 
,  AS 名前 
FROM 
  
UNION ALL 
SELECT 
  '' AS テーブル名 
,  AS ID 
,  AS 名前 
FROM 
  
ORDER BY 
  
, 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  'Departments' AS テーブル名
, DepartmentID AS ID
, DepartmentName AS 名前
FROM
  Departments
UNION ALL
SELECT
  'Categories' AS テーブル名
, CategoryID AS ID
, CategoryName AS 名前
FROM
  Categories
ORDER BY
  テーブル名
, ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , テーブル名
     , ID
     , 名前
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , テーブル名
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/departments.xls</path>
          
          <path>drill/prepare/categories.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルDepartments、CustomerClasses、Categories、PrefecturalsをUNION ALLで1つにまとめなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[
   AS ID
,  AS 名前

  


   AS ID
,  AS 名前

  


   AS ID
,  AS 名前

  


   AS ID
,  AS 名前

  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  DepartmentID AS ID
, DepartmentName AS 名前
FROM
  Departments
UNION ALL
SELECT
  CustomerClassID AS ID
, CustomerClassName AS 名前
FROM
  CustomerClasses
UNION ALL
SELECT
  CategoryID AS ID
, CategoryName AS 名前
FROM
  Categories
UNION ALL
SELECT
  PrefecturalID AS ID
, PrefecturalName AS 名前
FROM
  Prefecturals
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , ID
     , 名前
     FROM
         (
          SELECT 
            ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , ID
     , 名前
     FROM
         (
          SELECT
            ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">ID</append>
          
          <append point="order">名前</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/departments.xls</path>
          
          <path>drill/prepare/customerclasses.xls</path>
          
          <path>drill/prepare/categories.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[第3問の各テーブルにテーブル名を付してUNION ALLで1つにまとめなさい。結果をテーブル名、IDの昇順に並べなさい。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  'Departments' AS テーブル名
, DepartmentID AS ID
, DepartmentName AS 名前
FROM
  Departments
UNION ALL
SELECT
  'CustomerClasses' AS テーブル名
, CustomerClassID AS ID
, CustomerClassName AS 名前
FROM
  CustomerClasses
UNION ALL
SELECT
  'Categories' AS テーブル名
, CategoryID AS ID
, CategoryName AS 名前
FROM
  Categories
UNION ALL
SELECT
  'Prefecturals' AS テーブル名
, PrefecturalID AS ID
, PrefecturalName AS 名前
FROM
  Prefecturals
ORDER BY
  テーブル名
, ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , テーブル名
     , ID
     , 名前
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , テーブル名
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , テーブル名
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/departments.xls</path>
          
          <path>drill/prepare/customerclasses.xls</path>
          
          <path>drill/prepare/categories.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesの中から、CustomerClassID=2（個人）の顧客でQuantityが10以上のデータと、CustomerClassID=1（法人）の顧客でQuantityが100以上のデータをUNION ALLで1つにまとめなさい。SaleID、ProductID、Quantity、CustomerClassID、CustomerNameの各項目を表示しなさい（第3章その8第5問、その9第5問、その10第4問、その10第5問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.SaleID
, A.ProductID
, A.Quantity
, B.CustomerClassID
, B.CustomerName
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 10
  AND
  B.CustomerClassID = 2
UNION ALL
SELECT
  A.SaleID
, A.ProductID
, A.Quantity
, B.CustomerClassID
, B.CustomerName
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 100
  AND
  B.CustomerClassID = 1
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , SaleID
     , ProductID
     , Quantity
     , CustomerClassID
     , CustomerName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , ProductID
          , Quantity
          , CustomerClassID
          , CustomerName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , ProductID
          , Quantity
          , CustomerClassID
          , CustomerName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , SaleID
     , ProductID
     , Quantity
     , CustomerClassID
     , CustomerName
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , ProductID
          , Quantity
          , CustomerClassID
          , CustomerName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , SaleID
          , ProductID
          , Quantity
          , CustomerClassID
          , CustomerName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">SaleID</append>
          
          <append point="order">ProductID</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-07-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その8】UNIONを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[さっき出してもらった名前の一覧なんだけどさ、重複があると見辛いよね、重複を取っちゃってよ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerName AS 氏名
FROM
  Customers
UNION
SELECT
  EmployeeName AS 氏名
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 氏名
     FROM
         (
          SELECT 
            氏名
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            氏名
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">氏名</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomers とEmployeesをUNIONで1つにまとめ、それぞれのID順に表示しなさい（第3章その9第1問、その10第1問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS ID
,  AS 名前
FROM
  
UNION
SELECT
   AS ID
,  AS 名前
FROM
  
ORDER BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS ID
, CustomerName AS 名前
FROM
  Customers
UNION
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesの、EmployeeIDとEmployeeNameを表示させたものをUNIONで1つにまとめなさい。結果はEmployeeID順に表示しなさい（第3章その9第2問、その10第2問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS ID
,  AS 名前
FROM

UNION
SELECT
   AS ID
,  AS 名前
FROM

ORDER BY

;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
UNION
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsとSalesのProductIDをUNIONで1つにまとめ、ProductID順に表示しなさい（第3章その9第3問、その10第3問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
FROM
  Products
UNION
SELECT
  ProductID
FROM
  Sales
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesの中から、SaleDateが'2006-10-01' と '2006-12-31'の間でQuantityが10以上のデータと、SaleDateが'2007-01-01' と '2007-03-31'の間でQuantityが10以上のデータと、SaleDateが'2007-04-01' と '2007-06-30'の間でQuantityが10以上のデータをUNIONで1つにまとめなさい。CustomerIDとProductIDを昇順に並べて表示しなさい（第3章その9第4問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2006-10-01' AND '2006-12-31'
  AND
  Quantity >= 10
UNION
SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2007-01-01' AND '2007-03-31'
  AND
  Quantity >= 10
UNION
SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2007-04-01' AND '2007-06-30'
  AND
  Quantity >= 10
ORDER BY
  CustomerID
, ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , CustomerID
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , CustomerID
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesの中から、CustomerClassID=2（個人）の顧客でQuantityが10以上の場合と、CustomerClassID=1（法人）の顧客でQuantityが100以上の場合をUNIONで1つにまとめなさい。ProductIDをその順に表示しなさい（第3章その7第5問、その9第5問、その10第4問、その10第5問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 10
  AND
  B.CustomerClassID = 2
UNION
SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 100
  AND
  B.CustomerClassID = 1
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-08-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その9】INTERSECTを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[給料日でもしっかりと売上を上げる奴ってやっぱり真面目な感じがするよね。一覧で出してみてくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  e.EmployeeName AS 氏名
, s.SaleDate AS 日付
FROM
  Sales AS s
    JOIN
  Employees AS e
    ON s.EmployeeID = e.EmployeeID
INTERSECT
SELECT
   e.EmployeeName AS 氏名
, s.PayDate AS 日付
FROM
  Salary AS s
    JOIN
  Employees AS e
    ON s.EmployeeID = e.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 氏名
     , 日付
     FROM
         (
          SELECT 
            氏名
          , 日付
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            氏名
          , 日付
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 氏名
     , 日付
     FROM
         (
          SELECT 
            氏名
          , 日付
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            氏名
          , 日付
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">氏名</append>
          
          <append point="order">日付</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersとEmployeesをINTERSECTで1つにまとめ、それぞれのID順に表示しなさい（第3章その8第1問、その10第1問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS ID
,  AS 名前
FROM
  
INTERSECT
SELECT
   AS ID
,  AS 名前
FROM
  
ORDER BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS ID
, CustomerName AS 名前
FROM
  Customers
INTERSECT
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesの、EmployeeIDとEmployeeNameを表示させたものをINTERSECTで1つにまとめなさい。結果はEmployeeID順に表示しなさい（第3章その8第2問、その10第2問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT
   AS ID
,  AS 名前
FROM
  
INTERSECT
SELECT
   AS ID
,  AS 名前
FROM
  
ORDER BY
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
INTERSECT
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsとSalesのProductIDをINTERSECTで1つにまとめ、ProductID順に表示しなさい（第3章その6第2問、その8第3問、その10第3問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
FROM
  Products
INTERSECT
SELECT
  ProductID
FROM
  Sales
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesの中から、SaleDateが'2006-10-01' と '2006-12-31'の間でQuantityが10以上のデータと、SaleDateが'2007-01-01' と '2007-03-31'の間でQuantityが10以上のデータと、SaleDateが'2007-04-01' と '2007-06-30'の間でQuantityが10以上のデータをINTERSECTで1つにまとめなさい。CustomerIDとProductIDを昇順に並べて表示しなさい（第3章その8第4問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2006-10-01' AND '2006-12-31'
  AND
  Quantity >= 10
INTERSECT
SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2007-01-01' AND '2007-03-31'
  AND
  Quantity >= 10
INTERSECT
SELECT
  CustomerID
, ProductID
FROM
  Sales
WHERE
  SaleDate BETWEEN '2007-04-01' AND '2007-06-30'
  AND
  Quantity >= 10
ORDER BY
  CustomerID
, ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , CustomerID
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , CustomerID
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesの中から、CustomerClassID=2（個人）の顧客でQuantityが10以上の場合と、CustomerClassID=1（法人）の顧客でQuantityが100以上の場合をINTERSECTで1つにまとめなさい。ProductIDをその順に表示しなさい（第3章その7第5問、その8第5問、その10第4問、その10第5問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 10
  AND
  B.CustomerClassID = 2
INTERSECT
SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 100
  AND
  B.CustomerClassID = 1
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-09-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その10】EXCEPTを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[まだ販売の実績がない社員もいると思うんだ。一覧で出してみてくれ]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeName
FROM
  Employees
EXCEPT
SELECT
   e.EmployeeName
FROM
  Sales AS s
    JOIN
  Employees AS e
    ON s.EmployeeID = e.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , EmployeeName
     FROM
         (
          SELECT 
            EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , EmployeeName
     FROM
         (
          SELECT 
            EmployeeName
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            EmployeeName
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">EmployeeName</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersとEmployeesをEXCEPTで1つにまとめ、それぞれのID順に表示しなさい（第3章その8第1問、その9第1問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT 
   AS ID
,  AS 名前 
FROM 
   
EXCEPT 
SELECT 
   AS ID
,  AS 名前 
FROM 
   
ORDER BY 
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  CustomerID AS ID
, CustomerName AS 名前
FROM
  Customers
EXCEPT
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesの、EmployeeIDとEmployeeNameを表示させたものをEXCEPTで1つにまとめなさい。結果はEmployeeID順に表示しなさい（第3章その8第2問、その9第2問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[SELECT 
   AS ID
,  AS 名前 
FROM 
  
EXCEPT 
SELECT 
   AS ID
,  AS 名前 
FROM 
  
ORDER BY 
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
EXCEPT
SELECT
  EmployeeID AS ID
, EmployeeName AS 名前
FROM
  Employees
ORDER BY
  ID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ID
     , 名前
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ID
          , 名前
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルProductsとSalesのProductIDをEXCEPTで1つにまとめ、ProductID順に表示しなさい（第3章その6第3問、その8第3問、その9第3問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
FROM
  Products
EXCEPT
SELECT
  ProductID
FROM
  Sales
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesの中の、CustomerClassID=1（法人）の顧客でQuantityが100以上のデータのProductIDから、CustomerClassID=2（個人）の顧客でQuantityが10以上のデータのProductIDを差し引いた残りのProductIDをその順に表示しなさい（第5問および、第3章その7第5問、その8第5問、その9第5問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 100
  AND
  B.CustomerClassID = 1
EXCEPT
SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 10
  AND
  B.CustomerClassID = 2
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT 
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[第4問とは逆に、テーブルSalesの中の、CustomerClassID=2（個人）の顧客でQuantityが10以上のデータのProductIDから、CustomerClassID=1（法人）の顧客でQuantityが100以上のデータのProductIDを差し引いた残りのProductIDをその順に表示しなさい（第4問および、第3章その7第5問、その8第5問、その9第5問の結果と比較しなさい）。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 10
  AND
  B.CustomerClassID = 2
EXCEPT
SELECT
  A.ProductID
FROM
  Sales A
    JOIN
  Customers B
    ON A.CustomerID = B.CustomerID
WHERE
  A.Quantity >= 100
  AND
  B.CustomerClassID = 1
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-3-10-05.xls</expected-file-path>
      </entry>
      
    </section>
    
  </chapter>
  
  <chapter name="第4章　追加・更新・削除">
    
    <section name="【その1】レコードを一件追加する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[新しい商品出すから、データの追加頼むね]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Products
(
  ProductID
, ProductName
, Price
, CategoryID
)
VALUES
(
  101
, 'サカナまっしぐら'
, 270
, 5
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployeesに下記のデータを追加しなさい。
EmployeeID:31
EmployeeName:モクモク
Height:170
Weight:60
EMail:moku@nekoyasudo
HireFiscalYear:2007
Birthday:1989-08-08
BloodType:AB]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[INSERT 
INTO Employees 
( 
  EmployeeID 
, EmployeeName 
, Height 
, Weight 
, EMail 
, HireFiscalYear 
, Birthday 
, BloodType 
)
VALUES 
(
  
, 
, 
, 
, 
, 
, 
,
)
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Employees
( 
  EmployeeID
, EmployeeName
, Height
, Weight
, EMail
, HireFiscalYear
, Birthday
, BloodType
)
VALUES
(
 31
,'モクモク'
,170
,60
,'moku@nekoyasudo'
,2007
,'1989-08-08'
,'AB'
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[第1問で追加したモクモクを2007-09-01付けで営業に配属するようBelongToにデータを追加しなさい。
BelongID:35
EmployeeID:31
DepartmentID:1
StartDate:2007-09-01]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[INSERT 
INTO BelongTo 
( 

, 
, 
, 
)
VALUES 
(
  
, 
, 
, 
)
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO BelongTo
(
  BelongID
, EmployeeID
, DepartmentID
, StartDate
)
VALUES
(
 35
,31
,1
,'2007-09-01'
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM BelongTo ORDER BY BelongID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/belongto.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesにデータを追加しなさい。
SaleID:1006
Quantity:10
CustomerID:1
ProductID:40
EmployeeID:31
SaleDate:2007-09-01]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[
INTO 
(
  
, 
, 
, 
, 
, 
)

(
  
, 
, 
, 
, 
, 
)
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Sales
(
  SaleID
, Quantity
, CustomerID
, ProductID
, EmployeeID
, SaleDate
)
VALUES
(
 1006
,10
,1
,40
,31
,'2007-09-01'
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalaryにデータを1件追加しなさい。
SalaryID:354
EmployeeID:31
PayDate:2007-09-05
Amount:100,000]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Salary
(
  SalaryID
, EmployeeID
, PayDate
, Amount
)
VALUES
(
 354
,31
,'2007-09-05'
,100000
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomersにデータを1件追加しなさい。
CustomerID:31
CustomerName:有限会社貉商会
Address:和歌山県吉野郡
CustomerClassID:1
PrefecturalID:30]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Customers
(
  CustomerID
, CustomerName
, Address
, CustomerClassID
, PrefecturalID
)
VALUES
(
 31
,'有限会社貉商会'
,'和歌山県吉野郡'
,1
,30
)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-01-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その2】副問い合わせを使って追加する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今までの売上を元に、みんなに特別ボーナスを出したい。ついては、支払日を2008年2月14日にして、それぞれが売り上げた金額の0.1パーセントを給与データとして作成してくれ]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Salary
(
  SalaryID
, EmployeeID
, PayDate
, Amount
)
SELECT
  s.EmployeeID + 100000
, s.EmployeeID
, '2008-02-14'
, SUM( s.Quantity * p.Price * 0.001 )
FROM
  Sales AS s
    JOIN
  Products AS p
    ON s.ProductID = p.ProductID
GROUP BY
  s.EmployeeID + 100000
, s.EmployeeID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[入社年度（HireFiscalYear）が1993以前の従業員に2007-10-01付けで特別報奨金各20000をSalaryテーブルに追加しなさい。SalaryIDはEmployeeIDに20000を加えたものを使用しなさい。]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[INSERT
INTO Salary
(
  SalaryID
, EmployeeID
, PayDate
, Amount
)
SELECT
   + 20000
, 
, 
, 
FROM
  
WHERE
   <= 1993
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Salary
(
  SalaryID
, EmployeeID
, PayDate
, Amount
)
SELECT
  EmployeeID + 20000
, EmployeeID
, '2007-10-01'
, 20000
FROM
  Employees
WHERE
  HireFiscalYear <= 1993
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[入社年度が1988以前の従業員をCustomersに追加しなさい。
CustomerCode、CustomerIDはEmployeeIDに10000を加えたもの、Addressはすべて会社所在地の江戸川区西小岩、PrefecturalIDは13、CustomerClassIDは2、CustomerNameはEmployeeNameを用いるものとします。]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[INSERT
INTO Customers
(
  
, 
, 
, 
, 
, 
)
SELECT 
   + 
,  + 
, 
, 
, 
, 
FROM 
  
WHERE
   <= 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Customers
(
  CustomerID
, CustomerCode
, CustomerName
, Address
, CustomerClassID
, PrefecturalID
)
SELECT
  EmployeeID + 10000
, EmployeeID + 10000
, EmployeeName
, '江戸川区西小岩'
, 2
, 13
FROM
  Employees
WHERE
  HireFiscalYear <= 1988
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesに対して、テーブルEmployeesのBloodType='O'のEmployeeIDを用いて、以下の内容でデータを追加しなさい。
SaleID:EmployeeID + 30000
Quantity:10
CustomerID:10
ProductID:20
SaleDate:2007-09-01]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[

(
  
, 
, 
, 
, 
, 
)
SELECT
   + 
, 
, 
, 
, 
, 

  

   = 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Sales
(
  SaleID
, Quantity
, CustomerID
, ProductID
, EmployeeID
, SaleDate
)
SELECT
  EmployeeID + 30000
, 10
, 10
, 20
, EmployeeID
, '2007-09-01'
FROM
  Employees
WHERE
  BloodType = 'O'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSalesに対して、テーブルCustomersでPrefecturalID＝8のCustomerIDを用いて、以下の内容でデータを追加しなさい。
SaleID:CustomerID + 40000
Quantity:20
EmployeeID:5
ProductID:21
SaleDate:2007-09-05]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Sales
(
  SaleID
, Quantity
, CustomerID
, ProductID
, EmployeeID
, SaleDate
)
SELECT
  CustomerID + 40000
, 20
, CustomerID
, 21
, 5
, '2007-09-05'
FROM
  Customers
WHERE
  PrefecturalID = 8
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesに対して、テーブルProductsでCategoryID＝5のProductIDを用いて、以下の内容でデータを追加しなさい。
SaleID:ProductID + 50000
Quantity:30
CustomerID:15
EmployeeID:2
SaleDate:2007-09-10]]>
        </title>
        <query-type>insert</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[INSERT
INTO Sales
(
  SaleID
, Quantity
, CustomerID
, ProductID
, EmployeeID
, SaleDate
)
SELECT
  ProductID + 50000
, 30
, 15
, ProductID
, 2
, '2007-09-10'
FROM
  Products
WHERE
  CategoryID = 5
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-02-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その3】レコードを更新する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[全部の商品の価格を3パーセントずつ下げることになったから、変更頼むね]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Products
SET
  Price = Price * 0.97
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルCustomersのCustomerCodeを現在の値に1000加えたものに変更しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE 
  
SET 
   =  + 1000
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Customers
SET
  CustomerCode = CustomerCode + 1000
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerCode;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルEmployeesのEmailを***@nekoyasudoから***@nekoyasudo.co.jpに変更しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE 
  
SET 
   =  || 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Employees
SET
  EMail = EMail || '.co.jp'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployeesのHeightを+2、Weightを-5しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE 
  
SET 
   =  + 
,  =  - 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Employees
SET
  Height = Height + 2
, Weight = Weight - 5
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルDepartmentsのDepartmentNameの末尾に'部'を付けなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Departments
SET
  DepartmentName = DepartmentName || '部'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Departments ORDER BY DepartmentID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_departments.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomers、CustomerNameにCustomerClassID=1の場合、'御中'、2の場合'様'を追加しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE 
  Customers
SET
  CustomerName =
  CASE
    WHEN CustomerClassID = 1 THEN
      CustomerName || '御中'
    ELSE
      CustomerName || '様'
  END
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-03-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その4】特定のレコードを更新する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[顧客ID が5 の人引越ししたそうだから、新しい住所に変更頼むね]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Customers
SET
  Address = '世田谷区たがやせ1丁目'
WHERE
  CustomerID = 5
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルEmployees、EmployeeID=10のHeightを+5しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE 
  
SET 
   =  + 5
WHERE 
   = 10
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Employees
SET
  Height = Height +5
WHERE
  EmployeeID = 10
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalary、EmployeeID=5、PayDate='2007-03-25'のAmountを+20,000しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE
  
SET 
   =  + 
WHERE 
   = 5 
  AND 
   = 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount = Amount + 20000
WHERE
  EmployeeID = 5
  AND
  PayDate = '2007-03-25'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルEmployees、BloodType='AB'のHeightを-2、Weightを+3しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[
  

   =  - 2
,  =  + 3
WHERE 
   = 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Employees
SET
  Height = Height - 2
, Weight = Weight + 3
WHERE
  BloodType = 'AB'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルSales、CustomerID=10、ProductID=5、SaleDateが2007-05-31以降のデータのQuantityを+10しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Sales
SET
  Quantity = Quantity +10
WHERE
  CustomerID = 10
  AND
  ProductID = 5
  AND
  SaleDate >= '2007-05-31'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルProductsで、CategoryID=7の場合、現在のPriceが2000以上の場合は20%値下げ、現在のPriceが1000以上の場合は10%値下げに変更しなさい。現在の値が1000未満の場合は変更しないようにしなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Products
SET
  Price =
    CASE WHEN Price >=2000 THEN Price * 0.8
         ELSE Price * 0.9
    END
WHERE
  CategoryID = 7
  AND
  Price >=1000
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-04-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その5】更新条件に副問い合わせを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今までの販売累計数が100を超えているものについては、価格を1パーセントアップしたい。更新しておいてくれ]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Products
SET
  Price = Price * 1.01
WHERE
  ProductID IN
  (
   SELECT
     ProductID
   FROM
     Sales
   GROUP BY
     ProductID
   HAVING
     SUM(Quantity) > 100
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[一度も売上のない商品を3％値下げしなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE 
  
SET 
   =  * 0.97
WHERE 
   NOT IN 
 (
  SELECT 
   
  FROM 
   
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Products
SET
  Price = Price * 0.97
WHERE
  ProductID NOT IN
 (
  SELECT
    ProductID
  FROM
   Sales
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[売上件数が10件に満たないEmployeeIDの2007-10-01支給予定の報奨金金額を5％減額しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE
  
SET
   =  * 0.95
WHERE
   = '2007-10-01'
  AND
   IN
 (
  SELECT
    
  FROM
   
  GROUP BY
    
  HAVING
     (  ) < 10
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount = Amount * 0.95
WHERE
  PayDate = '2007-10-01'
  AND
  EmployeeID IN
 (
  SELECT
    EmployeeID
  FROM
   Sales
  GROUP BY
    EmployeeID
  HAVING
    COUNT (*) < 10
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[売上件数が50件以上のEmployeeIDの2007-10-01支給予定の報奨金金額を10％増額しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[
  

   =  * 

   = 
  
   
 (
  
    
  
   
  
    
   
     () >= 50
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount = Amount * 1.1
WHERE
  PayDate = '2007-10-01'
  AND
  EmployeeID IN
 (
  SELECT
    EmployeeID
  FROM
   Sales
  GROUP BY
    EmployeeID
  HAVING
    COUNT (*) >=  50
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[2007年8月25日までに一度も売上のない従業員の2007年8月25日支払分給与を10％値下げしなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount = Amount * 0.9
WHERE
  PayDate = '2007-08-25'
  AND
  EmployeeID NOT IN
 (
  SELECT
    EmployeeID
  FROM
    Sales
  WHERE
    SaleDate < '2007-08-25'
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[2007年8月25日までにCustomerClassID=1の顧客に対して売上のある従業員の2007年8月25日支払分給与を10％値上げしなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount = Amount * 1.1
WHERE
  PayDate = '2007-08-25'
  AND
  EmployeeID IN
 (
  SELECT
    A.EmployeeID
  FROM
    Sales AS A
      JOIN
    Customers AS B
      ON A.CustomerID = B.CustomerID
  WHERE
    B.CustomerClassID = 1
    AND
    A.SaleDate < '2007-08-25'
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-05-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その6】他のテーブルの値を使って更新する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[この前の特別ボーナスにさらに勤続年数に応じて上乗せしたい。ついては、支払日を2007年度として、入社年度との差で1 年ごとに1000 円ボーナスに上乗せしてくれ]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount
  = Amount +
 (
  SELECT
    (2007 - e.HireFiscalYear) * 1000
  FROM
    Employees e
  WHERE
    Salary.EmployeeID = e.EmployeeID
 )
WHERE
  PayDate = '2008-02-14'
  AND
  EXISTS
 (
  SELECT
    'X'
  FROM
    Employees AS e
  WHERE
    Salary.EmployeeID = e.EmployeeID
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[顧客テーブルの住所の前に、対応する都道府県の都道府県名を連結しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE
  
SET
  
  =
 (
  SELECT
    
  FROM
    
  WHERE
     = 
  )
  || 
WHERE
  EXISTS
  (
  SELECT
    
  FROM
    
  WHERE
     = 
  )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Customers
SET
  Address
  =
 (
  SELECT
    PrefecturalName
  FROM
    Prefecturals
  WHERE
    Customers.PrefecturalID = Prefecturals.PrefecturalID
 )
  || Address
WHERE
  EXISTS
 (
  SELECT
    'X'
  FROM
    Prefecturals
  WHERE
    Customers.PrefecturalID = Prefecturals.PrefecturalID
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
          <path>drill/prepare/chapter4_prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[各従業員ごとに、各人の売上総額の3％を支払日が2007年8月25日の給料に加算しなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[UPDATE
  
SET
  
  =  +
 (
  SELECT
    SUM(  *  ) * 0.03
  FROM
    
      JOIN
    
      ON  = 
  WHERE
     < '2007-08-25' 
    AND
     = 
 )
WHERE
   = '2007-08-25' 
  
  EXISTS
 (
  
    
  
    
  
    < '2007-08-25' 
  AND    
     = 
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Salary
SET
  Amount
  = Amount +
  (
   SELECT
     SUM( Sales.Quantity * Products.Price ) * 0.03
   FROM
     Sales
       JOIN
     Products
       ON Sales.ProductID = Products.ProductID
   WHERE
     Sales.SaleDate < '2007-08-25' 
     AND
     Salary.EmployeeID = Sales.EmployeeID
  )
WHERE
  PayDate = '2007-08-25'
  AND
  EXISTS
  (
   SELECT
     'X'
   FROM
     Sales
   WHERE
     Sales.SaleDate < '2007-08-25' 
     AND
     Salary.EmployeeID = Sales.EmployeeID
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[ProductsテーブルのPriceを、対応するProductIDをもつSalesの売上金額（数量×単価）の平均に置き換えなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[ 
  
 
  
  = 
 (
  
     (  ) 
  
    
  
     = 
 )

  EXISTS
 (
  
    
  
    
  
     = 
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE 
  Products 
SET 
  Price 
  = 
 (
  SELECT 
    AVG( Sales.Quantity * Products.Price ) 
  FROM 
    Sales 
  WHERE 
    Products.ProductID = Sales.ProductID 
 )
WHERE
  EXISTS
 (
  SELECT
    'X'
  FROM
    Sales 
  WHERE 
    Products.ProductID = Sales.ProductID 
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[ProductsテーブルのProductNameの各文字列の後ろに、対応するCategoryIDを持つCategoriesのCategoryNameを連結しなさい。このときCategoryNameはカッコで囲みなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE 
  Products 
SET 
  ProductName 
  =  ProductName || '(' || 
 (
  SELECT 
    CategoryName 
  FROM 
    Categories 
  WHERE 
    Products.CategoryID = Categories.CategoryID 
 )
  || ')'
WHERE
  EXISTS
 (
  SELECT 
    'X' 
  FROM 
    Categories 
  WHERE 
    Products.CategoryID = Categories.CategoryID 
 ) 
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_categories.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[販売個数の累計が500個以上の商品について、ProductsテーブルのProductNameを次の文字列連結を使って修正しなさい。『'n個も売れてるヒット商品！' || ProductName』なお、n個の「n」には実際の販売個数の累計値をセットしなさい。]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE 
  Products 
SET 
  ProductName 
  = 
 (
  SELECT 
    SUM( Quantity )
  FROM 
    Sales 
  WHERE 
    Products.ProductID = Sales.ProductID 
 )
  || '個も売れてるヒット商品！' || ProductName 
WHERE 
 (
  SELECT 
    SUM( Quantity )
  FROM 
    Sales 
  WHERE 
    Products.ProductID = Sales.ProductID 
 ) >= 500
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-06-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その7】レコードを削除する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[給与データも随分とたまってることだし、一旦全部消してしまおう]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Salary
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM Salary;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルBelongToのレコードをすべて削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  BelongTo
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM BelongTo;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_belongto.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルCustomersのレコードをすべて削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE
FROM
  
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Customers
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM Customers;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルSalesのレコードをすべて削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Sales
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM Sales;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルProductsのレコードをすべて削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Products
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM Products;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルEmployeesのレコードをすべて削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Employees
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT COUNT(*) FROM Employees;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-07-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その8】特定のレコードを削除する">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[社員IDが17の人が退職しちゃったんだよ。削除しておいてね]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Employees
WHERE
  EmployeeID = 17
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalesからSaleID=1006のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE
FROM
  
WHERE
   = 1006
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Sales
WHERE
  SaleID = 1006
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルSalaryからEmployeeID=10、PayDate=2007-10-01のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE
FROM
  
WHERE
   = 10
  AND
   = '2007-10-01'
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Salary
WHERE
  EmployeeID = 10
  AND
  PayDate = '2007-10-01'
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルCustomersからCustomerIDが10,000以上のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[



   >= 
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Customers
WHERE
  CustomerID >= 10000
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルProductsからCategoryID=1のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM 
  Products
WHERE 
  CategoryID = 1
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルCustomersからCustomerClassID=2かつPrefecturalIDが3、5、7、13いずれかのデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Customers
WHERE
  CustomerClassID = 2
  AND
  PrefecturalID IN (3, 5, 7, 13)
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-08-05.xls</expected-file-path>
      </entry>
      
    </section>
    
    <section name="【その9】削除条件に副問い合わせを使う">
      
      <entry name="書いてみよう">
        <title>
          <![CDATA[今まで一度も販売されたことがない商品は、取り扱いをやめるのでデータを消してしまってくれ]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Products
WHERE
  ProductID NOT IN
  (
   SELECT
     ProductID
   FROM
     Sales
  )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-ex.xls</expected-file-path>
      </entry>
      
      <entry name="第1問">
        <title>
          <![CDATA[テーブルSalaryからSalesにデータのないEmployeeIDを持つデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE 
FROM 
  
WHERE 
   NOT IN 
 (
  SELECT 
    
  FROM 
    
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Salary
WHERE
  EmployeeID NOT IN
 (
  SELECT
    EmployeeID
  FROM
    Sales
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Salary ORDER BY SalaryID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_salary.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-01.xls</expected-file-path>
      </entry>
      
      <entry name="第2問">
        <title>
          <![CDATA[テーブルProductsからSalesでのQuantity合計が20未満のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[DELETE 
FROM 
  
WHERE 
   NOT IN 
 (
  SELECT 
    
  FROM 
    
  GROUP BY 
    
  HAVING 
    SUM(  ) >= 20 
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Products
WHERE 
  ProductID NOT IN
 (
  SELECT
    ProductID
  FROM
    Sales
  GROUP BY
    ProductID
  HAVING
    SUM( Quantity ) >= 20
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Products ORDER BY ProductID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_products.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-02.xls</expected-file-path>
      </entry>
      
      <entry name="第3問">
        <title>
          <![CDATA[テーブルCustomersから売上実績のないデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[ 
 
   
 
  
 (
  
    
  
    
 )
;]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Customers
WHERE
  CustomerID NOT IN
 (
  SELECT
    CustomerID
  FROM
    Sales
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_customers.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-03.xls</expected-file-path>
      </entry>
      
      <entry name="第4問">
        <title>
          <![CDATA[テーブルEmployeesから売上実績5件以下のデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Employees
WHERE
  EmployeeID NOT IN
 (
  SELECT
    EmployeeID
  FROM
    Sales
  GROUP BY
    EmployeeID
  HAVING
    COUNT (*) > 5
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Employees ORDER BY EmployeeID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_employees.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-04.xls</expected-file-path>
      </entry>
      
      <entry name="第5問">
        <title>
          <![CDATA[テーブルSalesからEmployeeIDが現在人事（DepartmentID=3）に所属するデータを削除しなさい。]]>
        </title>
        <query-type>delete</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[DELETE
FROM
  Sales
WHERE
  EmployeeID IN
 (
  SELECT
    EmployeeID
  FROM
    BelongTo
  WHERE
    EndDate IS NULL
    AND
    DepartmentID = 3
 )
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Sales ORDER BY SaleID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/chapter4_belongto.xls</path>
          
          <path>drill/prepare/chapter4_sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-4-09-05.xls</expected-file-path>
      </entry>
      
    </section>
    
  </chapter>
  
  <chapter name="第5章">
    
    <section name="応用問題">
      
      <entry name="【その1】SQLをSELECT文で作成する">
        <title>
          <![CDATA[今あるテーブルのレコードを元に別のデータベースに移行するためのデータを作りたいときがあります。こういう場合は、INSERT文を作ってしまうと便利です。では、都道府県テーブル（Prefectural）のデータを元に、1レコードごとのINSERT文をSELECT文を使って生成するにはどうすればよいでしょうか。]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  'INSERT INTO Pref_Back VALUES ('
  || PrefecturalID
  || ','''
  || PrefecturalName
  || ''');' AS 都道府県のINSERT文
FROM
  Prefecturals
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 都道府県のINSERT文
     FROM
         (
          SELECT
            都道府県のINSERT文
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT 
          SELECT 
            都道府県のINSERT文
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 都道府県のINSERT文
     FROM
         (
          SELECT 
            都道府県のINSERT文
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT 
            都道府県のINSERT文
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">都道府県のINSERT文</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-01-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その2】月別販売額一覧の作成">
        <title>
          <![CDATA[月別の販売額をそれぞれ合計して、一覧にしなさい。
(出力項目：年月、販売合計金額；
出力順：年月)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  年月
, SUM( 販売金額 ) AS 販売合計金額
FROM
 (
  SELECT
    SUBSTR(CAST( SaleDate AS VARCHAR ),1,7) AS 年月
  , s.Quantity * p.Price AS 販売金額
  FROM
    Sales AS s
      JOIN
    Products AS p
      ON s.ProductID = p.ProductID
 )
GROUP BY
  年月
ORDER BY
  年月
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-02-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その3】社員別・月別販売額一覧の作成">
        <title>
          <![CDATA[すべての社員について、月別の販売額の合計を一覧にして出しなさい。
(出力項目：EmployeeID、EmployeeName、年月、販売合計金額；
出力順：EmployeeID、EmployeeName、年月)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  e.EmployeeID
, e.EmployeeName
, 年月
, SUM(
      CASE WHEN 販売金額 IS NULL THEN 0
           ELSE 販売金額
      END
     ) AS 販売合計金額
FROM
  Employees AS e
    LEFT OUTER JOIN
 (
  SELECT
    s.EmployeeID
  , SUBSTR(CAST( SaleDate AS VARCHAR ),1,7) AS 年月
  , s.Quantity * p.Price AS 販売金額
  FROM
    Sales AS s
      JOIN
    Products AS p
      ON s.ProductID = p.ProductID
 ) AS x
    ON e.EmployeeID = x.EmployeeID
GROUP BY
  e.EmployeeID
, e.EmployeeName
, 年月
ORDER BY
  e.EmployeeID
, e.EmployeeName
, 年月
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , EmployeeID
     , EmployeeName
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , EmployeeID
     , EmployeeName
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , EmployeeID
          , EmployeeName
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/employees.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-03-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その4】商品別・月別販売額一覧の作成">
        <title>
          <![CDATA[商品別に、月ごとの販売額の合計を一覧にして出しなさい。ただし、商品のカテゴリIDが1または3または9のものだけで構いません。合計が5000円以下のものも表示する必要はありません。なお、最近のものから月別に並べてください。
(出力項目：ProductID、ProductName、年月、販売合計金額；
出力順：ProductID、ProductName、年月（降順）)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  p.ProductID
, p.ProductName
, 年月
, SUM( s.Quantity * p.Price ) AS 販売合計金額
FROM
 (
  SELECT
    ProductID
  , SUBSTR(CAST( SaleDate AS VARCHAR ),1,7) AS 年月
  , Quantity
  FROM
    Sales
 ) AS s
    JOIN
  Products AS p
    ON s.ProductID = p.ProductID
WHERE
  p.CategoryID IN (1, 3, 9)
GROUP BY
  p.ProductID
, p.ProductName
, 年月
HAVING
  SUM( s.Quantity * p.Price ) > 5000
ORDER BY
  p.ProductID
, p.ProductName
, 年月 DESC]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , 年月
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , 年月
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , 年月
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-04-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その5】顧客別・商品別販売額一覧の作成">
        <title>
          <![CDATA[顧客別・商品別に販売額の合計を一覧にして出しなさい。
(出力項目：CustomerID、CustomerName、ProductName、販売合計金額；
出力順：CustomerID、CustomerName、ProductName)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  c.CustomerID
, c.CustomerName
, p.ProductName
, SUM( s.Quantity * p.Price ) 販売合計金額
FROM
  Sales AS s
    JOIN
  Products AS p
    ON s.ProductID = p.ProductID
      JOIN
    Customers AS c
      ON s.CustomerID = c.CustomerID
GROUP BY
  c.CustomerID
, c.CustomerName
, p.ProductName
ORDER BY
  c.CustomerID
, c.CustomerName
, p.ProductName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , CustomerID
     , CustomerName
     , ProductName
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , CustomerName
          , ProductName
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , CustomerName
          , ProductName
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , CustomerID
     , CustomerName
     , ProductName
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , CustomerName
          , ProductName
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , CustomerID
          , CustomerName
          , ProductName
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-05-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その6】都道府県別・商品別販売額一覧の作成">
        <title>
          <![CDATA[都道府県別・商品別に、販売額の合計を一覧にして出しなさい。
(出力項目：PrefecturalID、PrefecturalName、ProductName、販売合計金額；
出力順：PrefecturalID、PrefecturalName、ProductName)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  pr.PrefecturalID
, pr.PrefecturalName
, p.ProductName
, SUM( s.Quantity * p.Price ) 販売合計金額
FROM
  Sales AS s
    JOIN
  Products AS p
    ON s.ProductID = p.ProductID
      JOIN
   Customers AS c
      ON s.CustomerID = c.CustomerID
        JOIN
      Prefecturals AS pr
        ON c.PrefecturalID = pr.PrefecturalID
GROUP BY
  pr.PrefecturalID
, pr.PrefecturalName
, p.ProductName
ORDER BY
  pr.PrefecturalID
, pr.PrefecturalName
, p.ProductName
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , PrefecturalID
     , PrefecturalName
     , ProductName
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , PrefecturalID
          , PrefecturalName
          , ProductName
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , PrefecturalID
          , PrefecturalName
          , ProductName
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , PrefecturalID
     , PrefecturalName
     , ProductName
     , 販売合計金額
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , PrefecturalID
          , PrefecturalName
          , ProductName
          , 販売合計金額
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , PrefecturalID
          , PrefecturalName
          , ProductName
          , 販売合計金額
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/customers.xls</path>
          
          <path>drill/prepare/prefecturals.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-06-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その7】部門別・月別平均給与一覧の作成">
        <title>
          <![CDATA[部門別・月別の給与の平均を一覧にして出しなさい。なお、2007年に支払われたものだけで構いません。
ただし部門は、給与支払日（PayDate）にその社員が所属していた部門としてください。
(出力項目：DepartmentID、DepartmentName、年月、平均給与；
出力順：DepartmentID、DepartmentName、年月)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  d.DepartmentID
, d.DepartmentName
, 年月
, AVG( Amount ) AS 平均給与
FROM
 (
  SELECT
    EmployeeID
  , PayDate
  , SUBSTR(CAST( PayDate AS VARCHAR ),1,7) AS 年月
  , Amount
  FROM
    Salary
  WHERE
    SUBSTR(CAST( PayDate AS VARCHAR ),1,4) = '2007'
 ) AS s
    JOIN
  BelongTo AS b
    ON s.EmployeeID = b.EmployeeID
    AND s.PayDate >= b.StartDate
    AND s.PayDate <
        CASE WHEN b.EndDate IS NULL THEN '9999-12-31'
             ELSE b.EndDate
        END
      JOIN
    Departments AS d
      ON b.DepartmentID = d.DepartmentID
GROUP BY
  d.DepartmentID
, d.DepartmentName
, 年月
ORDER BY
  d.DepartmentID
, d.DepartmentName
, 年月
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , DepartmentID
     , DepartmentName
     , 年月
     , 平均給与
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , DepartmentID
          , DepartmentName
          , 年月
          , 平均給与
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , DepartmentID
          , DepartmentName
          , 年月
          , 平均給与
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , DepartmentID
     , DepartmentName
     , 年月
     , 平均給与
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , DepartmentID
          , DepartmentName
          , 年月
          , 平均給与
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , DepartmentID
          , DepartmentName
          , 年月
          , 平均給与
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/salary.xls</path>
          
          <path>drill/prepare/belongto.xls</path>
          
          <path>drill/prepare/departments.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-07-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その8】月別・カテゴリ別販売額一覧の作成">
        <title>
          <![CDATA[月別・カテゴリ別の合計販売額を一覧にして出しなさい。なお、各月ごとに1行にまとめて、カテゴリは1から10までIDごとに集計して横に並べて表示しなさい。
(出力項目：年月、Ct1、Ct2、Ct3、Ct4、Ct5、Ct6、Ct7、Ct8、Ct9、Ct10；
出力順：年月)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  年月
, SUM(CASE
        WHEN p.CategoryID = 1 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct1
, SUM(CASE
        WHEN p.CategoryID = 2 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct2
, SUM(CASE
        WHEN p.CategoryID = 3 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct3
, SUM(CASE
        WHEN p.CategoryID = 4 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct4
, SUM(CASE
        WHEN p.CategoryID = 5 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct5
, SUM(CASE
        WHEN p.CategoryID = 6 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct6
, SUM(CASE
        WHEN p.CategoryID = 7 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct7
, SUM(CASE
        WHEN p.CategoryID = 8 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct8
, SUM(CASE
        WHEN p.CategoryID = 9 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct9
, SUM(CASE
        WHEN p.CategoryID = 10 THEN s.Quantity * p.Price
        ELSE 0
      END ) AS Ct10
FROM
 (
  SELECT
    ProductID
  , SUBSTR(CAST( SaleDate AS VARCHAR ),1,7) AS 年月
  , Quantity
  FROM
    Sales
 ) AS s
    JOIN
  Products AS p
    ON s.ProductID = p.ProductID
GROUP BY
  年月
ORDER BY
  年月
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , 年月
     , Ct1
     , Ct2
     , Ct3
     , Ct4
     , Ct5
     , Ct6
     , Ct7
     , Ct8
     , Ct9
     , Ct10
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , Ct1
          , Ct2
          , Ct3
          , Ct4
          , Ct5
          , Ct6
          , Ct7
          , Ct8
          , Ct9
          , Ct10
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , Ct1
          , Ct2
          , Ct3
          , Ct4
          , Ct5
          , Ct6
          , Ct7
          , Ct8
          , Ct9
          , Ct10
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , 年月
     , Ct1
     , Ct2
     , Ct3
     , Ct4
     , Ct5
     , Ct6
     , Ct7
     , Ct8
     , Ct9
     , Ct10
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , Ct1
          , Ct2
          , Ct3
          , Ct4
          , Ct5
          , Ct6
          , Ct7
          , Ct8
          , Ct9
          , Ct10
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , 年月
          , Ct1
          , Ct2
          , Ct3
          , Ct4
          , Ct5
          , Ct6
          , Ct7
          , Ct8
          , Ct9
          , Ct10
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
          <append point="order">年月</append>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/sales.xls</path>
          
          <path>drill/prepare/products.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-08-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その9】商品別3ヶ月販売推移表の作成">
        <title>
          <![CDATA[商品別に、2007年6月から8月までのそれぞれの月の販売額の推移を出しなさい。なお、7月と8月は前月に対して、増加・変化なし・減少のそれぞれについて、↑・→・↓でそれぞれ表現しなさい。
(出力項目：ProductID、ProductName、6月販売金額、7月販売金額、対6月増減、8月販売金額、対7月増減；
出力順：ProductID)]]>
        </title>
        <query-type>select</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[SELECT
  ProductID
, ProductName
, "6月販売金額"
, "7月販売金額"
, CASE WHEN "6月販売金額" < "7月販売金額" THEN '↑'
       WHEN "6月販売金額" = "7月販売金額" THEN '→'
       ELSE '↓'
  END AS 対6月増減
, "8月販売金額"
, CASE WHEN "7月販売金額" < "8月販売金額" THEN '↑'
       WHEN "7月販売金額" = "8月販売金額" THEN '→'
       ELSE '↓'
  END AS 対7月増減
FROM
 (
  SELECT
    p.ProductID
  , p.ProductName
  , SUM(
        CASE WHEN s.SaleDate IS NULL THEN 0
             WHEN SUBSTR( CAST( s.SaleDate AS VARCHAR),1, 7) = '2007-06' THEN s.Quantity * p.Price
             ELSE 0
        END
       ) AS "6月販売金額"
  , SUM(
        CASE WHEN s.Quantity IS NULL THEN 0
             WHEN SUBSTR( CAST( s.SaleDate AS VARCHAR),1, 7) = '2007-07' THEN s.Quantity * p.Price
             ELSE 0
        END
       ) AS "7月販売金額"
  , SUM(
        CASE WHEN s.Quantity IS NULL THEN 0
             WHEN SUBSTR( CAST( s.SaleDate AS VARCHAR),1, 7) = '2007-08' THEN s.Quantity * p.Price
             ELSE 0
        END
       ) AS "8月販売金額"
  FROM
    Products AS p
      LEFT OUTER JOIN
    Sales s
      ON p.ProductID = s.ProductID
  GROUP BY
    p.ProductID
  , p.ProductName
 )
ORDER BY
  ProductID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT
  *
FROM 
    (
     SELECT
       '0' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , "6月販売金額"
     , "7月販売金額"
     , 対6月増減
     , "8月販売金額"
     , 対7月増減
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , "6月販売金額"
          , "7月販売金額"
          , 対6月増減
          , "8月販売金額"
          , 対7月増減
          FROM
              (
$$EXPECTED_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , "6月販売金額"
          , "7月販売金額"
          , 対6月増減
          , "8月販売金額"
          , 対7月増減
          FROM
              (
$$ACTUAL_SQL$$
              )
         )
     UNION ALL
     SELECT
       '1' AS 状態
     , 自動付加行番号
     , ProductID
     , ProductName
     , "6月販売金額"
     , "7月販売金額"
     , 対6月増減
     , "8月販売金額"
     , 対7月増減
     FROM
         (
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , "6月販売金額"
          , "7月販売金額"
          , 対6月増減
          , "8月販売金額"
          , 対7月増減
          FROM
              (
$$ACTUAL_SQL$$
              )
          EXCEPT
          SELECT
            ROWNUM() AS 自動付加行番号
          , ProductID
          , ProductName
          , "6月販売金額"
          , "7月販売金額"
          , 対6月増減
          , "8月販売金額"
          , 対7月増減
          FROM
              (
$$EXPECTED_SQL$$
              )
         )
    )
;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/products.xls</path>
          
          <path>drill/prepare/sales.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-09-01.xls</expected-file-path>
      </entry>
      
      <entry name="【その10】顧客コードの再編">
        <title>
          <![CDATA[CustomersテーブルのCustomerCode列の値を以下の形式で全部置き換えなさい。
1行目：CustomerClassID
2～3行目：PrefecturalID（足りない桁は前ゼロで埋める）
4～7行目：CustomerID（足りない桁は前ゼロで埋める）

例）1010001
]]>
        </title>
        <query-type>update</query-type>
        <input-default-sql><![CDATA[]]></input-default-sql>
        <expected-sql>
          <![CDATA[UPDATE
  Customers
SET
  CustomerCode =
  CustomerClassID * 1000000 + PrefecturalID * 10000 +
  CustomerID
;]]>
        </expected-sql>
        <verified-sql>
          <![CDATA[SELECT * FROM Customers ORDER BY CustomerID;]]>
        </verified-sql>
        <inject-sql>
          
        </inject-sql>
        <prepare-file-path>
          
          <path>drill/prepare/customers.xls</path>
          
        </prepare-file-path>
        <expected-file-path>drill/expected/expected-5-10-01.xls</expected-file-path>
      </entry>
      
    </section>
    
  </chapter>
  
</sqldrill>
